group_by_all() %>%
summarise() %>%
ungroup() %>%
arrange(country, year) %>%
mutate(country = recode(country, "Eswatini" = "Swaziland"),
iso3 = countrycode(country, "country.name", "iso3c")) %>%
select(country, iso3, year, type, concept, source)
census_popdist_nat %>%
filter(year>1969) %>%
select(country, year, type, concept, source) %>%
group_by_all() %>%
summarise() %>%
ungroup() %>%
arrange(country, year) %>%
mutate(country = recode(country, "Eswatini" = "Swaziland"),
iso3 = countrycode(country, "country.name", "iso3c")) %>%
select(country, iso3, year, type, concept, source) %>%
write.csv("census.csv", row.names = TRUE)
##+ datasets
surveys <- dhs_surveys(countryIds = "MW", surveyYearStart=1995)
ird <- dhs_datasets(fileType = "IR", fileFormat = "flat", surveyIds = surveys$SurveyId)
ird$path <- unlist(get_datasets(ird))
##+ load packages, results=FALSE, message=FALSE, warning=FALSE
library(tidyverse)
library(rdhs)
library(demogsurv)
library(lme4)
##+ datasets
surveys <- dhs_surveys(countryIds = "MW", surveyYearStart=1995)
ird <- dhs_datasets(fileType = "IR", fileFormat = "flat", surveyIds = surveys$SurveyId)
ird$path <- unlist(get_datasets(ird))
#' Use rdhs to identify and retrieve individual recode (IR) datasets for all DHS surveys conducted in Malawi since 1995.
set_rdhs_config(email="o.stevens@imperial.ac.uk", project="Subnational fertility", config_path = "~/.rdhs.json")
##+ datasets
surveys <- dhs_surveys(countryIds = "MW", surveyYearStart=1995)
ird <- dhs_datasets(fileType = "IR", fileFormat = "flat", surveyIds = surveys$SurveyId)
ird$path <- unlist(get_datasets(ird))
ir <- lapply(ird$path, readRDS) %>%
Map(data.frame,
surveyid = surveys$SurveyId,
country = surveys$CountryName,
survyear = surveys$SurveyYear,
survtype = surveys$SurveyType,
.,
stringsAsFactors = FALSE)
##+ warning = FALSE
## Shorten the TIPS for 2015 DHS to 0-8 due to outliers in urban for 10 year recall.
tips_surv <- list("DHS" = c(0, 7), "MIS" = c(0, 5))[surveys$SurveyType]
tfr <- Map(calc_tfr, ir,
by = list(~surveyid + country + survyear + v025),
tips = tips_surv,
period = list(1995:2017))
tfr <- tfr %>%
bind_rows %>%
type.convert %>%
mutate(v025 = factor(v025, levels= c(1,2), labels = c("Urban", "Rural"))) %>%
filter(period <= survyear) %>%
mutate(lower = tfr - qnorm(0.975) * se_tfr,
upper = tfr + qnorm(0.975) * se_tfr)
##+ fig.show='hold', fig.height=3.8, fig.width=5.0, fig.align = "center"
ggplot(tfr, aes(period, tfr, ymin = lower, ymax = upper,
color=surveyid, fill=surveyid)) +
geom_point() +
geom_line() +
geom_ribbon(alpha=0.2, linetype="blank") +
ggtitle("TFR") +
theme(legend.position="bottom") +
ylim(0, 12.5) +
facet_grid(~v025)
##+ warning = FALSE
asfr <- Map(calc_asfr, ir,
by = list(~surveyid + country + survyear+ v025),
tips = tips_surv,
period = list(1995:2017),
counts = TRUE)
## Combine births and pys from 40-44 and 45-49 age groups to reduce 0 counts?
asfr2 <- asfr %>%
bind_rows %>%
type.convert %>%
mutate(v025 = factor(v025, levels= c(1,2), labels = c("Urban", "Rural"))) %>%
filter(period <= survyear) %>%
mutate(births = round(births),
pys = round(pys),
sum_var = ifelse(agegr=="40-44" | agegr=="45-49", TRUE, FALSE)) %>%
group_by(surveyid, country,  survyear,tips,  v025, period, sum_var) %>%
mutate(births = ifelse(sum_var, sum(births), births),
pys = ifelse(sum_var, sum(pys), pys),
asfr = births/pys,
agegr = plyr::revalue(agegr, c("40-44" = "40-49")),
agegr = factor(agegr, levels=c("15-19", "20-24", "25-29", "30-34", "35-39", "40-49"))
) %>%
droplevels() %>%
ungroup() %>%
select(-sum_var) %>%
distinct(surveyid, country, survyear, tips,v025, period, births, pys, asfr, .keep_all=TRUE)
mod2 <- glmer(births ~ agegr + period + v025 + (1 |agegr) , family = poisson, data = asfr2, offset = log(pys))
df_pred2 <- crossing(period = 1995:2017,
agegr = levels(asfr2$agegr),
pys = 1,
v025 = unique(asfr2$v025))
pred2 <- predict(mod2, newdata = df_pred2)
df_pred2 <- data.frame(df_pred2, pred2) %>%
mutate(asfr = exp(pred2))
ggplot(asfr2, aes(period, asfr, color = surveyid)) +
geom_point() +
geom_line() +
#geom_ribbon(aes(ymin = lower, ymax = upper), data = df_pred, color = NA, fill = "darkred", alpha = 0.3) +
geom_line(data = df_pred2, aes(y=asfr), color = "darkred") +
# facet_wrap(~v025)
facet_grid(v025~agegr)
asfr <- asfr %>%
bind_rows %>%
type.convert %>%
mutate(v025 = factor(v025, levels= c(1,2), labels = c("Urban", "Rural"))) %>%
filter(period <= survyear)
##+ warning = FALSE
asfr <- Map(calc_asfr, ir,
by = list(~surveyid + country + survyear+ v025),
tips = tips_surv,
period = list(1995:2017),
counts = TRUE)
##+ warning = FALSE
asfr <- Map(calc_asfr, ir,
by = list(~surveyid + country + survyear+ v025),
tips = tips_surv,
period = list(1995:2017),
counts = TRUE)
## Combine births and pys from 40-44 and 45-49 age groups to reduce 0 counts?
asfr <- asfr %>%
bind_rows %>%
type.convert %>%
mutate(v025 = factor(v025, levels= c(1,2), labels = c("Urban", "Rural"))) %>%
filter(period <= survyear) %>%
mutate(births = round(births),
pys = round(pys),
sum_var = ifelse(agegr=="40-44" | agegr=="45-49", TRUE, FALSE)) %>%
group_by(surveyid, country,  survyear,tips,  v025, period, sum_var) %>%
mutate(births = ifelse(sum_var, sum(births), births),
pys = ifelse(sum_var, sum(pys), pys),
asfr = births/pys,
agegr = plyr::revalue(agegr, c("40-44" = "40-49")),
agegr = factor(agegr, levels=c("15-19", "20-24", "25-29", "30-34", "35-39", "40-49"))
) %>%
droplevels() %>%
ungroup() %>%
select(-sum_var) %>%
distinct(surveyid, country, survyear, tips,v025, period, births, pys, asfr, .keep_all=TRUE)
##+ warning = FALSE
mod <- glm(births ~ agegr +  period + v025, family = poisson, data = asfr, offset = log(pys))
#' Create a data frame for values to predict---all age groups in each year from 1995 through 2017.
df_pred <- crossing(period = 1995:2017,
agegr = levels(asfr$agegr),
pys = 1,
v025 = unique(asfr$v025))
#' Generate predictions log ASFR and return standard error
pred<- predict(mod, newdata = df_pred, se.fit = TRUE)
df_pred <- data.frame(df_pred, pred) %>%
mutate(asfr = exp(fit),
lower = exp(fit - qnorm(0.975) * se.fit),
upper = exp(fit + qnorm(0.975) * se.fit))
##+ fig.show='hold', fig.height=5.0, fig.width=7, fig.align = "center"
ggplot(asfr, aes(period, asfr, color = surveyid)) +
geom_point() +
geom_line() +
geom_ribbon(aes(ymin = lower, ymax = upper), data = df_pred, color = NA, fill = "darkred", alpha = 0.3) +
geom_line(data = df_pred, color = "darkred") +
#ylim(0, 0.5) +
facet_grid(v025~agegr)
install.packages("merTools")
library(merTools)
predictInterval(mod2, newdata = df_pred2, n.sims = 999)
pred2 <- predict(mod2, newdata = df_pred2)
##+ fig.show='hold', fig.height=5.0, fig.width=7, fig.align = "center"
ggplot(asfr, aes(period, asfr, color = surveyid)) +
geom_point() +
geom_line() +
geom_ribbon(aes(ymin = lower, ymax = upper), data = df_pred, color = NA, fill = "darkred", alpha = 0.3) +
geom_line(data = df_pred, color = "darkred") +
#ylim(0, 0.5) +
facet_grid(~v025)
##+ fig.show='hold', fig.height=5.0, fig.width=7, fig.align = "center"
ggplot(asfr, aes(period, asfr, color = surveyid)) +
geom_point() +
geom_line() +
geom_ribbon(aes(ymin = lower, ymax = upper), data = df_pred, color = NA, fill = "darkred", alpha = 0.3) +
geom_line(data = df_pred, color = "darkred") +
#ylim(0, 0.5) +
facet_grid(v025~agegr)
##+ warning = FALSE
mod <- glm(births ~ agegr +  period + v025, family = poisson, data = asfr, offset = log(pys))
#' Create a data frame for values to predict---all age groups in each year from 1995 through 2017.
df_pred <- crossing(period = 1995:2017,
agegr = levels(asfr$agegr),
pys = 1,
v025 = unique(asfr$v025))
#' Generate predictions log ASFR and return standard error
pred<- predict(mod, newdata = df_pred, se.fit = TRUE)
df_pred <- data.frame(df_pred, pred) %>%
mutate(asfr = exp(fit),
lower = exp(fit - qnorm(0.975) * se.fit),
upper = exp(fit + qnorm(0.975) * se.fit))
##+ fig.show='hold', fig.height=5.0, fig.width=7, fig.align = "center"
ggplot(asfr, aes(period, asfr, color = surveyid)) +
geom_point() +
geom_line() +
geom_ribbon(aes(ymin = lower, ymax = upper), data = df_pred, color = NA, fill = "darkred", alpha = 0.3) +
geom_line(data = df_pred, color = "darkred") +
#ylim(0, 0.5) +
facet_grid(v025~agegr)
mod.inter <- glm(births ~ agegr*period + v025, family = poisson, data = asfr, offset = log(pys))
#' Create a data frame for values to predict---all age groups in each year from 1995 through 2017.
df_pred <- crossing(period = 1995:2017,
agegr = levels(asfr$agegr),
pys = 1,
v025 = unique(asfr$v025))
#' Generate predictions log ASFR and return standard error
pred<- predict(mod.inter, newdata = df_pred, se.fit = TRUE)
df_pred <- data.frame(df_pred, pred) %>%
mutate(asfr = exp(fit),
lower = exp(fit - qnorm(0.975) * se.fit),
upper = exp(fit + qnorm(0.975) * se.fit))
##+ fig.show='hold', fig.height=5.0, fig.width=7, fig.align = "center"
ggplot(asfr, aes(period, asfr, color = surveyid)) +
geom_point() +
geom_line() +
geom_ribbon(aes(ymin = lower, ymax = upper), data = df_pred, color = NA, fill = "darkred", alpha = 0.3) +
geom_line(data = df_pred, color = "darkred") +
#ylim(0, 0.5) +
facet_grid(v025~agegr)
##+ fig.show='hold', fig.height=5.0, fig.width=7, fig.align = "center"
plot.inter <- ggplot(asfr, aes(period, asfr, color = surveyid)) +
geom_point() +
geom_line() +
geom_ribbon(aes(ymin = lower, ymax = upper), data = df_pred, color = NA, fill = "darkred", alpha = 0.3) +
geom_line(data = df_pred, color = "darkred") +
#ylim(0, 0.5) +
facet_grid(v025~agegr)
#' Generate predictions log ASFR and return standard error
pred<- predict(mod, newdata = df_pred, se.fit = TRUE)
df_pred <- data.frame(df_pred, pred) %>%
mutate(asfr = exp(fit),
lower = exp(fit - qnorm(0.975) * se.fit),
upper = exp(fit + qnorm(0.975) * se.fit))
##+ fig.show='hold', fig.height=5.0, fig.width=7, fig.align = "center"
plot <- ggplot(asfr, aes(period, asfr, color = surveyid)) +
geom_point() +
geom_line() +
geom_ribbon(aes(ymin = lower, ymax = upper), data = df_pred, color = NA, fill = "darkred", alpha = 0.3) +
geom_line(data = df_pred, color = "darkred") +
#ylim(0, 0.5) +
facet_grid(v025~agegr)
gridExtra::grid.arrange(plot, plot.inter)
gridExtra::grid.arrange(plot, plot.inter, ncol=2)
anova(mod, mod.inter)
anova(mod, mod.inter, test="LRT")
#' Create a data frame for values to predict---all age groups in each year from 1995 through 2017.
df_pred <- crossing(period = 1995:2017,
# agegr = levels(asfr$agegr),
pys = 1,
v025 = unique(asfr$v025))
#' Generate predictions log ASFR and return standard error
pred<- predict(mod, newdata = df_pred, se.fit = TRUE)
df_pred <- data.frame(df_pred, pred) %>%
mutate(asfr = exp(fit),
lower = exp(fit - qnorm(0.975) * se.fit),
upper = exp(fit + qnorm(0.975) * se.fit))
#' Create a data frame for values to predict---all age groups in each year from 1995 through 2017.
df_pred <- crossing(period = 1995:2017,
agegr = levels(asfr$agegr),
pys = 1,
v025 = unique(asfr$v025))
#' Generate predictions log ASFR and return standard error
pred<- predict(mod, newdata = df_pred, se.fit = TRUE)
df_pred <- data.frame(df_pred, pred) %>%
mutate(asfr = exp(fit),
lower = exp(fit - qnorm(0.975) * se.fit),
upper = exp(fit + qnorm(0.975) * se.fit))
install_github("rmcelreath/rethinking",ref="Experimental")
library(devtools)
install_github("rmcelreath/rethinking",ref="Experimental")
install_github("rmcelreath/rethinking",ref="Experimental")
install_github("rmcelreath/rethinking",ref="Experimental")
library("rethinking", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
p_grid <- seq(0, 1, 1000)
p_grid <- seq(0, 1, 1000)
p_grid <- seq(0, 1, length.out=1000)
prob_p <- rep(1,1000)
prob_data <- dbinom(6, 9, p_grid)
posterior  <-  prob_data * prob_p
posterior <- posterior/sum(posterior)
p_grid <- seq(0, 1, length.out=1000)
prob_p <- rep(1,1000)
prob_data <- dbinom(6, 9, p_grid)
posterior  <-  prob_data * prob_p
posterior <- posterior/sum(posterior)
plot(posterior)
samples <- sample(p, prob=posterior, size=1e4, replace=TRUE)
?sample
library(tidyverse)
library(rdhs)
library(demogsurv)
library(INLA)
library(reshape2)
setwd("~/Documents/GitHub/subnat_fertility")
load("~/Documents/GitHub/subnat_fertility/asfr.Rda")
asfr1 <- asfr %>%
bind_rows %>%
type.convert %>%
mutate(v025 = factor(v025, levels= c(1,2), labels = c("Urban", "Rural"))) %>%
filter(period <= survyear) %>%
mutate(id.period = group_indices(., period),
id.period2 = id.period,
id.agegr = group_indices(., agegr),
id.agegr2 = id.agegr,
id.agegr.period = group_indices(., period, agegr),
id = 1:nrow(.))
?tcut
3:10*5
15:49*1
#            period = list(1995:2017))
#
# tfr <- tfr %>%
#   bind_rows %>%
#   type.convert %>%
#   mutate(v025 = factor(v025, levels= c(1,2), labels = c("Urban", "Rural"))) %>%
#   filter(period <= survyear) %>%
#   mutate(lower = tfr - qnorm(0.975) * se_tfr,
#          upper = tfr + qnorm(0.975) * se_tfr)
#
asfr <- Map(calc_asfr, ir,
by = list(~surveyid + country + survyear+ v025),
tips = tips_surv,
agegr= 15:49*1,
period = list(1995:2017),
counts = TRUE)
#
set_rdhs_config(email="o.stevens@imperial.ac.uk", project="Subnational fertility", config_path = "~/.rdhs.json")
##+ datasets
surveys <- dhs_surveys(countryIds = "MW", surveyYearStart=1995)
ird <- dhs_datasets(fileType = "IR", fileFormat = "flat", surveyIds = surveys$SurveyId)
ird$path <- unlist(get_datasets(ird))
ir <- lapply(ird$path, readRDS) %>%
Map(data.frame,
surveyid = surveys$SurveyId,
country = surveys$CountryName,
survyear = surveys$SurveyYear,
survtype = surveys$SurveyType,
.,
stringsAsFactors = FALSE)
tips_surv <- list("DHS" = c(0, 7), "MIS" = c(0, 5))[surveys$SurveyType]
#            period = list(1995:2017))
#
# tfr <- tfr %>%
#   bind_rows %>%
#   type.convert %>%
#   mutate(v025 = factor(v025, levels= c(1,2), labels = c("Urban", "Rural"))) %>%
#   filter(period <= survyear) %>%
#   mutate(lower = tfr - qnorm(0.975) * se_tfr,
#          upper = tfr + qnorm(0.975) * se_tfr)
#
asfr <- Map(calc_asfr, ir,
by = list(~surveyid + country + survyear+ v025),
tips = tips_surv,
agegr= 15:49*1,
period = list(1995:2017),
counts = TRUE)
3:10 * 5
15:50*1,
15:50*1
#            period = list(1995:2017))
#
# tfr <- tfr %>%
#   bind_rows %>%
#   type.convert %>%
#   mutate(v025 = factor(v025, levels= c(1,2), labels = c("Urban", "Rural"))) %>%
#   filter(period <= survyear) %>%
#   mutate(lower = tfr - qnorm(0.975) * se_tfr,
#          upper = tfr + qnorm(0.975) * se_tfr)
#
asfr <- Map(calc_asfr, ir,
by = list(~surveyid + country + survyear+ v025),
tips = tips_surv,
agegr= 15:50*1,
period = list(1995:2017),
counts = TRUE)
(15:50*1)*12
.epis_labels(15:50*1)
demogsurv::.epis_labels(15:50*1)
function (x)
{
if ("labels" %in% attributes(x))
return(labels(x)[-length(x)])
lower <- x[-length(x)]
upper <- x[-1] - 1
val <- ifelse(lower == upper, lower, paste0(lower, "-",
upper))
gsub("-Inf", "+", val)
}
foo <- function (x)
{
if ("labels" %in% attributes(x))
return(labels(x)[-length(x)])
lower <- x[-length(x)]
upper <- x[-1] - 1
val <- ifelse(lower == upper, lower, paste0(lower, "-",
upper))
gsub("-Inf", "+", val)
}
foo(15:50*1)
flib <- 15:50*1
foo(flib)
debugonce(foo)
foo(flib)
flib <- 15:51*1
foo(flib)
length(flib, foo(flib))
length(flib)
length(foo(flib))
mort <- read_excel("~/Downloads/Morticd10_part1.xlsx")
library(readxl)
mort <- read_excel("~/Downloads/Morticd10_part1.xlsx")
who_code <- read_excel("~/Downloads/who_mortality_codes.xlsx")
mort1 <- mort %>%
filter(Cause == 1020)
View(mort1)
library(readr)
mort <- read.csv("~/Downloads/Morticd9.txt")
mort1 <- mort %>%
filter(Cause == 1020)
View(mort)
filter(Cause == "B184)
mort1 <- mort %>%
filter(Cause == "B184")
unique(mort$Cause)
mort[mort$Cause=="B184"]
View(mort1)
str(mort)
mort1 <- mort %>%
filter(Cause == "B185")
View(mort1)
mort1 <- mort %>%
filter(Cause == "B185", Cause == "B184")
mort1 <- mort %>%
filter(Cause == "B185" | Cause == "B184")
View(mort1)
View(who_code)
who_code <- read_excel("~/Downloads/who_mortality_codes.xlsx", col_names = FALSE)
View(who_code)
who_code <- read_excel("~/Downloads/who_mortality_codes.xlsx", col_names = FALSE) %>%
mutate(ISO3 = countrycode(X_2, "country.name", "iso3c"))
library(countrycode)
who_code <- read_excel("~/Downloads/who_mortality_codes.xlsx", col_names = FALSE) %>%
mutate(ISO3 = countrycode(X_2, "country.name", "iso3c"))
who_code <- read_excel("~/Downloads/who_mortality_codes.xlsx", col_names = FALSE) %>%
mutate(ISO3 = countrycode(`X_2`, "country.name", "iso3c"))
who_code <- read_excel("~/Downloads/who_mortality_codes.xlsx", col_names = FALSE) %>%
`colnames<-`(., c(who_code, country))
who_code <- read_excel("~/Downloads/who_mortality_codes.xlsx", col_names = FALSE) %>%
`colnames<-`(., c("who_code", "country"))
mutate(ISO3 = countrycode(country, "country.name", "iso3c"))
?countrycode
who_code <- read_excel("~/Downloads/who_mortality_codes.xlsx", col_names = FALSE) %>%
`colnames<-`(., c("who_code", "country")) %>%
mutate(ISO3 = countrycode(country, "country.name", "iso3c"))
mort1 <- mort %>%
filter(Cause == "B185" | Cause == "B184") %>%
left_join(who_code, by = c("who_code" = "Country"))
mort1 <- mort %>%
filter(Cause == "B185" | Cause == "B184") %>%
left_join(who_code, by = c("Country" = "who_code"))
max(mort1$Year)
Morticd10 <- read_excel("~/Downloads/Morticd10_part1.xlsx")
Morticd10 <- read_excel("~/Downloads/Morticd10_part1.xlsx") %>%
filter(Cause == 1020)
View(Morticd10)
Morticd10.2 <- read.csv("~/Downloads/Morticd10_part2.txt")
Morticd10.2 <- read.csv("~/Downloads/Morticd10_part2.txt")
Morticd10 <- read_excel("~/Downloads/Morticd10_part1.xlsx")
Mortic10.1 <- Morticd10 %>%
filter(Cause == 1020)
Morticd10.2.1 <- Morticd10.2 %>%
filter(Cause == 1020)
hiv_mor <- Mortic10.1 %>%
bind_rows(Morticd10.2.1)
View(Mortic10.1)
View(Morticd10.2.1)
str(Morticd10.2.1)
Mortic10.1 <- Morticd10 %>%
filter(Cause == 1020) %>%
select(-List)
Morticd10.2.1 <- Morticd10.2 %>%
filter(Cause == 1020) %>%
select(-List)
hiv_mor <- Mortic10.1 %>%
bind_rows(Morticd10.2.1)
Mortic10.1 <- Morticd10 %>%
filter(Cause == 1020) %>%
type.convert()
Morticd10.2.1 <- Morticd10.2 %>%
filter(Cause == 1020) %>%
type.convert()
hiv_mor <- Mortic10.1 %>%
bind_rows(Morticd10.2.1)
View(hiv_mor)
hiv_mor <- Mortic10.1 %>%
bind_rows(Morticd10.2.1) %>%
left_join(who_code, by = c("Country" = "who_code"))
View(hiv_mor)
load("~/Documents/Data/Spectrum files/Specres 2018/AP_specres.RData")
View(AP_specres)
ap <-  AP_specres %>%
melt()
