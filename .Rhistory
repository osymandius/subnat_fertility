moz_areas <- read_sf("~/Documents/GitHub/naomi-data/MOZ/data/moz_areas.geojson")
art_flow_moz <- artattend_moz %>%
filter(reside_area_name %in% c("KaMubukwana", "KaMavota", "KaMaxakeni", "Nhlamankulu", "KaMpfumu", "KaTembe"),
quarter_id == 480,
source %in% "Expanded adj") %>%
select(reside_area_id, reside_area_name, attend_area_id, artnum_mean, source) %>%
left_join(moz_areas %>% select(area_id, center_x, center_y), by=c("reside_area_id" = "area_id")) %>%
rename(reside_x = center_x, reside_y = center_y) %>%
left_join(moz_areas %>% select(area_id, center_x, center_y), by=c("attend_area_id" = "area_id")) %>%
rename(attend_x = center_x, attend_y = center_y) %>%
select(-c(geometry.x, geometry.y)) %>%
filter(reside_area_id != attend_area_id)
art_flow_moz <- artattend_moz %>%
filter(reside_area_name %in% c("KaMubukwana", "KaMavota", "KaMaxakeni", "Nhlamankulu", "KaMpfumu", "KaTembe"),
quarter_id == 480) %>%
select(reside_area_id, reside_area_name, attend_area_id, artnum_mean, source) %>%
left_join(moz_areas %>% select(area_id, center_x, center_y), by=c("reside_area_id" = "area_id")) %>%
rename(reside_x = center_x, reside_y = center_y) %>%
left_join(moz_areas %>% select(area_id, center_x, center_y), by=c("attend_area_id" = "area_id")) %>%
rename(attend_x = center_x, attend_y = center_y) %>%
select(-c(geometry.x, geometry.y)) %>%
filter(reside_area_id != attend_area_id)
art_flow_moz <- artattend_moz %>%
filter(reside_area_name %in% c("KaMubukwana", "KaMavota", "KaMaxakeni", "Nhlamankulu", "KaMpfumu", "KaTembe"),
quarter_id == 480) %>%
select(reside_area_id, reside_area_name, attend_area_id, artnum_mean) %>%
left_join(moz_areas %>% select(area_id, center_x, center_y), by=c("reside_area_id" = "area_id")) %>%
rename(reside_x = center_x, reside_y = center_y) %>%
left_join(moz_areas %>% select(area_id, center_x, center_y), by=c("attend_area_id" = "area_id")) %>%
rename(attend_x = center_x, attend_y = center_y) %>%
select(-c(geometry.x, geometry.y)) %>%
filter(reside_area_id != attend_area_id)
reside_areas <- unique(art_flow_moz$reside_area_id)
net_art_flow_moz <- lapply(reside_areas, function(reside_areas, art_flow_moz) {
outbound <- art_flow_moz %>%
filter(reside_area_id == reside_areas) %>%
rename(outbound = artnum_mean)
inbound <- art_flow_moz %>%
filter(attend_area_id == reside_areas) %>%
rename(inbound = artnum_mean, area_id = reside_area_id) %>%
select(area_id, inbound)
net_art_flow <- outbound %>%
left_join(inbound, by=c("attend_area_id" = "area_id")) %>%
mutate(
inbound = ifelse(is.na(inbound), 0, inbound),
net_art_flow = outbound - inbound) %>%
select(-c(outbound, inbound))
net_art_flow
}, art_flow_moz)
art_flow_plot_moz <- lapply(net_art_flow_moz, function(x) {
used_dist <- unique(c(x$reside_area_id, x$attend_area_id))
ggplot() +
geom_sf(data=moz_areas %>% filter(area_id %in% used_dist), aes(geometry = geometry)) +
geom_sf(data=moz_areas %>% filter(area_id %in% c("MOZ_2_0101", "MOZ_2_0102","MOZ_2_0103", "MOZ_2_0104" ,"MOZ_2_0105")), aes(geometry = geometry), fill="lightblue") +
#geom_sf(data=moz_areas %>% filter(area_id %in% c("MOZ_2_0101", "MOZ_2_0102","MOZ_2_0103", "MOZ_2_0104" ,"MOZ_2_0105", "MOZ_2_0106")), aes(geometry = geometry), fill="lightblue") +
geom_segment(data=x %>% filter(net_art_flow >= 0), aes(x=reside_x, y=reside_y, xend=attend_x, yend=attend_y), arrow = arrow(length=unit(0.2, "cm")), color="black", size=1.4) +
geom_segment(data=x %>% filter(net_art_flow >= 0), aes(x=reside_x, y=reside_y, xend=attend_x, yend=attend_y, color=net_art_flow), arrow = arrow(length=unit(0.2, "cm")), size=1.1) +
geom_segment(data=x %>% filter(net_art_flow <0), aes(x=attend_x, y=attend_y, xend=reside_x - 0.15*(reside_x-attend_x), yend=reside_y - 0.15*(reside_y-attend_y)), color="black", size=1.4, arrow=arrow(length=unit(0.2, "cm"))) +
geom_segment(data=x %>% filter(net_art_flow <0), aes(x=attend_x, y=attend_y, xend=reside_x - 0.15*(reside_x-attend_x), yend=reside_y - 0.15*(reside_y-attend_y), color=net_art_flow), size=1.1, arrow=arrow(length=unit(0.2, "cm"))) +
# scale_colour_gradient2(low = "#2166ac", mid = "white", high = "#b2182b", midpoint = 0,
#                        space = "Lab", limits = c(-3000,2000),
#                        na.value = "grey50", guide = "colourbar", aesthetics = "colour") +
labs(x="", y="", title=x$reside_area_name, color= element_blank()) +
scale_colour_gradient2(low="red",high = "blue", mid="grey", midpoint = 0) +
#scale_colour_viridis(direction=-1) +
theme(
legend.position = 'bottom',
legend.key.width = unit(1,"cm")
)
})
target_admin1 <- "MOZ_1_01"
reside_districts <- areas %>%
filter(parent_area_id == target_admin1) %>%
filter(area_level == 2) %>%
.$area_id
areas <- read_sf("~/Documents/GitHub/naomi-data/MOZ/data/moz_areas.geojson")
target_admin1 <- "MOZ_1_01"
reside_districts <- areas %>%
filter(parent_area_id == target_admin1) %>%
filter(area_level == 2) %>%
.$area_id
artattend <- add_art_attendance_labels(out)
art_flow <- artattend %>%
filter(reside_area_id %in% reside_districts,
quarter_id == 480) %>%
select(reside_area_id, reside_area_name, attend_area_id, artnum_mean) %>%
left_join(areas %>% select(area_id, center_x, center_y), by=c("reside_area_id" = "area_id")) %>%
rename(reside_x = center_x, reside_y = center_y) %>%
left_join(areas %>% select(area_id, center_x, center_y), by=c("attend_area_id" = "area_id")) %>%
rename(attend_x = center_x, attend_y = center_y) %>%
select(-c(geometry.x, geometry.y)) %>%
filter(reside_area_id != attend_area_id) %>%
left_join(artattend %>%
filter(quarter_id == 480) %>%
group_by(reside_area_name) %>%
summarise(total_reside_art = sum(artnum_mean)))
net_art_flow <- lapply(reside_districts, function(reside_districts, art_flow) {
outbound <- art_flow %>%
filter(reside_area_id == reside_districts) %>%
rename(outbound = artnum_mean)
inbound <- art_flow %>%
filter(attend_area_id == reside_districts) %>%
rename(inbound = artnum_mean, area_id = reside_area_id) %>%
select(area_id, inbound)
net_art_flow <- outbound %>%
left_join(inbound, by=c("attend_area_id" = "area_id")) %>%
mutate(
inbound = ifelse(is.na(inbound), 0, inbound),
net_art_flow = outbound - inbound) %>%
select(-c(outbound, inbound))
net_art_flow
}, art_flow)
art_flow_plot <- lapply(net_art_flow, function(x, reside_districts, net_art_flow) {
used_dist <- x %>%
bind_rows %>%
select(reside_area_id, attend_area_id) %>%
unlist %>%
unique
outflow <- x %>%
filter(net_art_flow >0) %>%
.$net_art_flow %>%
sum %>%
round
inflow <- x %>%
filter(net_art_flow <= 0) %>%
.$net_art_flow %>%
sum %>%
round
ggplot() +
geom_sf(data=areas %>% filter(area_id %in% used_dist), aes(geometry = geometry)) +
geom_sf(data=areas %>% filter(area_id %in% reside_districts), aes(geometry = geometry), fill="lightblue") +
geom_segment(data=x %>% filter(net_art_flow >= 0), aes(x=reside_x - 0.1*(reside_x-attend_x), y=reside_y - 0.1*(reside_y-attend_y), xend=attend_x, yend=attend_y), arrow = arrow(length=unit(0.2, "cm")), color="black", size=1.4) +
geom_segment(data=x %>% filter(net_art_flow >= 0), aes(x=reside_x - 0.1*(reside_x-attend_x), y=reside_y - 0.1*(reside_y-attend_y), xend=attend_x, yend=attend_y, color=net_art_flow), arrow = arrow(length=unit(0.2, "cm")), size=1.1) +
geom_segment(data=x %>% filter(net_art_flow <0), aes(x=attend_x, y=attend_y, xend=reside_x - 0.1*(reside_x-attend_x), yend=reside_y - 0.1*(reside_y-attend_y)), color="black", size=1.4, arrow=arrow(length=unit(0.2, "cm"))) +
geom_segment(data=x %>% filter(net_art_flow <0), aes(x=attend_x, y=attend_y, xend=reside_x - 0.1*(reside_x-attend_x), yend=reside_y - 0.1*(reside_y-attend_y), color=net_art_flow), size=1.1, arrow=arrow(length=unit(0.2, "cm"))) +
geom_shadowtext(data=x %>% filter(net_art_flow >= 0), aes(x=attend_x - 0.35*(reside_x-attend_x), y=attend_y - 0.2*(reside_y-attend_y), label = abs(round(net_art_flow))), size=5, check_overlap = TRUE) +
geom_shadowtext(data=x %>% filter(net_art_flow <0), aes(x=attend_x + 0.25*(attend_x-reside_x), y=attend_y + 0.25*(attend_y-reside_y), label = abs(round(net_art_flow))), size=5, check_overlap = TRUE) +
labs(x="", y="", title=x$reside_area_name, subtitle=paste("Total inflow:", abs(inflow), "| Total outflow:", outflow, "| Net flow:", abs(outflow)-abs(inflow), "\nTotal resident on ART: ", round(unique(x$total_reside_art))), color= element_blank()) +
scale_colour_gradient2(low="red",high = "blue", mid="grey", midpoint = 0) +
theme_map() +
theme(
plot.title = element_text(size=18),
legend.position = "bottom",
legend.key.width = unit("1", "cm")
)
}, reside_districts, net_art_flow)
library(shadowtext)
library(ggthemes)
art_flow_plot <- lapply(net_art_flow, function(x, reside_districts, net_art_flow) {
used_dist <- x %>%
bind_rows %>%
select(reside_area_id, attend_area_id) %>%
unlist %>%
unique
outflow <- x %>%
filter(net_art_flow >0) %>%
.$net_art_flow %>%
sum %>%
round
inflow <- x %>%
filter(net_art_flow <= 0) %>%
.$net_art_flow %>%
sum %>%
round
ggplot() +
geom_sf(data=areas %>% filter(area_id %in% used_dist), aes(geometry = geometry)) +
geom_sf(data=areas %>% filter(area_id %in% reside_districts), aes(geometry = geometry), fill="lightblue") +
geom_segment(data=x %>% filter(net_art_flow >= 0), aes(x=reside_x - 0.1*(reside_x-attend_x), y=reside_y - 0.1*(reside_y-attend_y), xend=attend_x, yend=attend_y), arrow = arrow(length=unit(0.2, "cm")), color="black", size=1.4) +
geom_segment(data=x %>% filter(net_art_flow >= 0), aes(x=reside_x - 0.1*(reside_x-attend_x), y=reside_y - 0.1*(reside_y-attend_y), xend=attend_x, yend=attend_y, color=net_art_flow), arrow = arrow(length=unit(0.2, "cm")), size=1.1) +
geom_segment(data=x %>% filter(net_art_flow <0), aes(x=attend_x, y=attend_y, xend=reside_x - 0.1*(reside_x-attend_x), yend=reside_y - 0.1*(reside_y-attend_y)), color="black", size=1.4, arrow=arrow(length=unit(0.2, "cm"))) +
geom_segment(data=x %>% filter(net_art_flow <0), aes(x=attend_x, y=attend_y, xend=reside_x - 0.1*(reside_x-attend_x), yend=reside_y - 0.1*(reside_y-attend_y), color=net_art_flow), size=1.1, arrow=arrow(length=unit(0.2, "cm"))) +
geom_shadowtext(data=x %>% filter(net_art_flow >= 0), aes(x=attend_x - 0.35*(reside_x-attend_x), y=attend_y - 0.2*(reside_y-attend_y), label = abs(round(net_art_flow))), size=5, check_overlap = TRUE) +
geom_shadowtext(data=x %>% filter(net_art_flow <0), aes(x=attend_x + 0.25*(attend_x-reside_x), y=attend_y + 0.25*(attend_y-reside_y), label = abs(round(net_art_flow))), size=5, check_overlap = TRUE) +
labs(x="", y="", title=x$reside_area_name, subtitle=paste("Total inflow:", abs(inflow), "| Total outflow:", outflow, "| Net flow:", abs(outflow)-abs(inflow), "\nTotal resident on ART: ", round(unique(x$total_reside_art))), color= element_blank()) +
scale_colour_gradient2(low="red",high = "blue", mid="grey", midpoint = 0) +
theme_map() +
theme(
plot.title = element_text(size=18),
legend.position = "bottom",
legend.key.width = unit("1", "cm")
)
}, reside_districts, net_art_flow)
View(art_flow_plot)
names(art_flow_plot) <- net_art_flow %>%
bind_rows %>%
.$reside_area_name %>%
unique
View(art_flow_plot)
art_flow_plot[[1]]
art_flow_plot[[2]]
art_flow_plot[[3]]
art_flow_plot[[4]]
art_flow_plot[[5]]
art_flow_plot[[6]]
art_flow_plot[[7]]
art_flow_plot[[1]]
View(artattend_moz)
indicators_moz <- add_output_labels(out)
View(indicators_moz)
indicators_moz %>%
filter(
area_level ==1,
#area_name %in% c("KaMubukwana", "KaMavota", "Nhlamanukunu", "KaMaxakeni", "KaMpfumu", "KaTembe", "KaNyaka", "Matola", "Boane", "Matutuine", "Marracuene"),
#area_id %in% c("MOZ_1_01", "MOZ_1_02"),
age_group_id == 20, #20
sex == "both",
indicator_id %in% c(2:5),
quarter_id == 480
) %>%
left_join(areas_wide %>% select(area_id, area_name1)) %>%
mutate(area_name = fct_reorder(area_name, desc(area_name1))) %>%
ggplot(aes(x=area_name, y=mean, fill=source)) +
geom_bar(position=position_dodge2(reverse=TRUE), stat="identity") +
#geom_hline(aes(yintercept=1), linetype=3, alpha=0.8) +
#ylim(0,2) +
coord_flip() +
labs(x=element_blank(), y=element_blank(), title="15+ | Master") +
facet_wrap(~indicator_label, scales="free")
library(countrycode)
library(tidyverse)
library(magrittr)
library(rdhs)
library(demogsurv)
library(INLA)
library(reshape2)
library(survival)
library(geojsonsf)
library(sf)
library(spdep)
library(tidyr)
library(naomi)
library(viridis)
library(parallel)
devtools::load_all("~/Documents/GitHub/naomi")
setwd("~/Documents/GitHub/subnat_fertility")
source("fertility_funs.R")
#boundaries_old <- readRDS("~/Documents/GitHub/naomi-data-old/data/area_boundaries.rds")
boundaries <- readRDS("~/Documents/GitHub/subnat_fertility/area_boundaries.rds")
iso3_codes <- c("LSO", "MOZ", "MWI", "NAM", "SWZ", "TZA", "UGA", "ZMB", "ZWE")
paths <- paste0("~/Documents/GitHub/naomi-data/", iso3_codes, "/data/", tolower(iso3_codes), "_areas.geojson")
area_cols <- c("iso3", "area_id", "area_name", "area_level", "parent_area_id", "naomi_level")
areas_long <- lapply(paths, read_sf) %>% lapply(function(x) {
iso3_code <- x %>%
filter(area_level == 0) %>%
select(area_id) %>%
unique %>%
.$area_id
x <- x %>%
mutate(iso3 = iso3_code) %>%
st_drop_geometry() %>%
select(area_cols)
return(x)
}) %>%
bind_rows
#areas_long <- readRDS("~/Documents/GitHub/subnat_fertility/areas_long.RDS")
areas_wide <- lapply(paths, read_sf) %>%
lapply(function(x) {spread_areas(as.data.frame(x))}) %>%
lapply(function(x) {x %>% mutate(iso3 = area_id0)}) %>%
bind_rows
indicators_moz %>%
filter(
area_level ==1,
#area_name %in% c("KaMubukwana", "KaMavota", "Nhlamanukunu", "KaMaxakeni", "KaMpfumu", "KaTembe", "KaNyaka", "Matola", "Boane", "Matutuine", "Marracuene"),
#area_id %in% c("MOZ_1_01", "MOZ_1_02"),
age_group_id == 20, #20
sex == "both",
indicator_id %in% c(2:5),
quarter_id == 480
) %>%
left_join(areas_wide %>% select(area_id, area_name1)) %>%
mutate(area_name = fct_reorder(area_name, desc(area_name1))) %>%
ggplot(aes(x=area_name, y=mean, fill=source)) +
geom_bar(position=position_dodge2(reverse=TRUE), stat="identity") +
#geom_hline(aes(yintercept=1), linetype=3, alpha=0.8) +
#ylim(0,2) +
coord_flip() +
labs(x=element_blank(), y=element_blank(), title="15+ | Master") +
facet_wrap(~indicator_label, scales="free")
indicators_moz %>%
filter(
area_level ==1,
#area_name %in% c("KaMubukwana", "KaMavota", "Nhlamanukunu", "KaMaxakeni", "KaMpfumu", "KaTembe", "KaNyaka", "Matola", "Boane", "Matutuine", "Marracuene"),
#area_id %in% c("MOZ_1_01", "MOZ_1_02"),
age_group_id == 20, #20
sex == "both",
indicator_id %in% c(2:5),
quarter_id == 480
) %>%
left_join(areas_wide %>% select(area_id, area_name1)) %>%
mutate(area_name = fct_reorder(area_name, desc(area_name1))) %>%
ggplot(aes(x=area_name, y=mean)) +
geom_bar(position=position_dodge2(reverse=TRUE), stat="identity") +
#geom_hline(aes(yintercept=1), linetype=3, alpha=0.8) +
#ylim(0,2) +
coord_flip() +
labs(x=element_blank(), y=element_blank(), title="15+ | Master") +
facet_wrap(~indicator_label, scales="free")
options_on <- list(
area_scope = "MOZ",
area_level = "2",
calendar_quarter_t1 = "CY2015Q4",
calendar_quarter_t2 = "CY2019Q4",
calendar_quarter_t3 = "CY2020Q3",
survey_prevalence = "MOZ2015AIS",
survey_art_coverage = "MOZ2015AIS",
survey_recently_infected = "",
include_art_t1 = "false",
include_art_t2 = "true",
artattend = TRUE,
max.dist = 2, # 1 is self, 2 is neighbours, 3 is neighbours of neighbours
specific_districts = NA, # If only specific districts should be allowed max.dist = to option above. All other districts are max.dist = 2. If not desired - NA.
artattend_log_gamma_offset = -4,
anc_prevalence_year1 = 2017,
anc_prevalence_year2 = 2019,
anc_art_coverage_year1 = 2017,
anc_art_coverage_year2 = 2019,
no_of_samples = 1000,
spectrum_artnum_calibration_level = "subnational",
spectrum_artnum_calibration_strat = "sex_age_group",
spectrum_plhiv_calibration_level = "subnational",
spectrum_plhiv_calibration_strat = "sex_age_group",
spectrum_population_calibration = "subnational",
spectrum_infections_calibration_level = "subnational",
spectrum_infections_calibration_strat = "sex_age_group"
)
options_on$outer_verbose <- TRUE
naomi_data <- naomi_prepare_data(data, options_on)
tmb_inputs <- prepare_tmb_inputs(naomi_data)
fit <- fit_tmb(tmb_inputs)
fit <- sample_tmb(fit)
out <- output_package(fit, naomi_data)
indicators_moz <- add_output_labels(out) %>%
mutate(source = "Neighbours") %>%
bind_rows(indicators_moz %>%
mutate(source = "Expanded"))
artattend_moz <- add_art_attendance_labels(out) %>%
mutate(source = "Neighbours") %>%
bind_rows(artattend_moz %>%
mutate(source = "Expanded"))
indicators_moz %>%
filter(
area_level ==1,
#area_name %in% c("KaMubukwana", "KaMavota", "Nhlamanukunu", "KaMaxakeni", "KaMpfumu", "KaTembe", "KaNyaka", "Matola", "Boane", "Matutuine", "Marracuene"),
#area_id %in% c("MOZ_1_01", "MOZ_1_02"),
age_group_id == 20, #20
sex == "both",
indicator_id %in% c(2:5),
quarter_id == 480
) %>%
left_join(areas_wide %>% select(area_id, area_name1)) %>%
mutate(area_name = fct_reorder(area_name, desc(area_name1))) %>%
ggplot(aes(x=area_name, y=mean, fill=source)) +
geom_bar(position=position_dodge2(reverse=TRUE), stat="identity") +
#geom_hline(aes(yintercept=1), linetype=3, alpha=0.8) +
#ylim(0,2) +
coord_flip() +
labs(x=element_blank(), y=element_blank(), title="15+ | Master") +
facet_wrap(~indicator_label, scales="free")
indicators_moz %>%
filter(
# area_level ==1,
area_name %in% c("KaMubukwana", "KaMavota", "Nhlamanukunu", "KaMaxakeni", "KaMpfumu", "KaTembe", "KaNyaka", "Matola", "Boane", "Matutuine", "Marracuene"),
#area_id %in% c("MOZ_1_01", "MOZ_1_02"),
age_group_id == 20, #20
sex == "both",
indicator_id %in% c(2:5),
quarter_id == 480
) %>%
left_join(areas_wide %>% select(area_id, area_name1)) %>%
mutate(area_name = fct_reorder(area_name, desc(area_name1))) %>%
ggplot(aes(x=area_name, y=mean, fill=source)) +
geom_bar(position=position_dodge2(reverse=TRUE), stat="identity") +
#geom_hline(aes(yintercept=1), linetype=3, alpha=0.8) +
#ylim(0,2) +
coord_flip() +
labs(x=element_blank(), y=element_blank(), title="15+ | Master") +
facet_wrap(~indicator_label, scales="free")
library(TMB)
library(tidyverse)
library(abind)
library(sf)
library(spdep)
library(INLA)
setwd("~/Documents/GitHub/subnat_fertility/")
asfr <- readRDS("~/Documents/GitHub/subnat_fertility/asfr_pred_subnat_15_2020_NEW.rds")[["MWI"]]
boundaries <- readRDS("~/Documents/GitHub/subnat_fertility/area_boundaries.rds")
iso3_codes <- c("LSO", "MOZ", "MWI", "NAM", "SWZ", "TZA", "UGA", "ZMB", "ZWE")
paths <- paste0("~/Documents/GitHub/naomi-data/", iso3_codes, "/data/", tolower(iso3_codes), "_areas.geojson")
area_cols <- c("iso3", "area_id", "area_name", "area_level", "parent_area_id", "naomi_level")
areas_long <- lapply(paths, read_sf) %>% lapply(function(x) {
iso3_code <- x %>%
filter(area_level == 0) %>%
select(area_id) %>%
unique %>%
.$area_id
x <- x %>%
mutate(iso3 = iso3_code) %>%
st_drop_geometry() %>%
select(area_cols)
return(x)
}) %>%
bind_rows
dat_m <- asfr %>%
filter(!is.na(surveyid)) %>%
select(area_id, period, agegr, births, pys) %>%
group_by(period, agegr, area_id) %>%
summarise_all(sum) %>%
ungroup %>%
select(-pys) %>%
mutate(agegr = as.numeric(factor(agegr))) %>%
pivot_wider(names_from = agegr, values_from = births) %>%
complete(period, area_id, fill=map(asfr[2:9], ~NA)) %>%
select(-period) %>%
nest(-area_id) %>%
mutate(data = map(data, ~as.matrix(.x))) %>%
pull(data) %>%
invoke(abind, ., along=3)
log_offset <- asfr %>%
filter(!is.na(surveyid)) %>%
select(area_id, period, agegr, births, pys) %>%
group_by(period, agegr, area_id) %>%
summarise_all(sum) %>%
ungroup %>%
select(-births) %>%
mutate(agegr = as.numeric(factor(agegr)), pys = log(pys)) %>%
pivot_wider(names_from = agegr, values_from = pys) %>%
complete(period, area_id, fill=map(asfr[3:9], ~NA)) %>%
mutate_if(is.numeric , replace_na, replace = -999) %>%
select(-period) %>%
nest(-area_id) %>%
mutate(data = map(data, ~as.matrix(.x))) %>%
pull(data) %>%
invoke(abind, ., along=3)
# dat_m <- asfr %>%
#   filter(!is.na(surveyid)) %>%
#   select(period, births, pys) %>%
#   group_by(period) %>%
#   summarise_all(sum) %>%
#   ungroup %>%
#   select(-pys, -period) %>%
#   as.matrix()
#
# log_offset <- asfr %>%
#   filter(!is.na(surveyid)) %>%
#   select(period,  births, pys) %>%
#   group_by(period) %>%
#   summarise_all(sum) %>%
#   ungroup %>%
#   mutate(pys = log(pys)) %>%
#   select(-births) %>%
#   select(-period) %>%
#   as.matrix()
sh <- areas_long %>%
filter(iso3 == "MWI", naomi_level) %>%
mutate(area_idx = row_number())
#' Neighbor list
nb <- sh %>%
left_join(boundaries) %>%
st_as_sf %>%
as("Spatial") %>%
spdep::poly2nb() %>%
`names<-`(sh$area_idx)
adj <- nb2mat(nb, zero.policy=TRUE, style="B")
Q <- INLA::inla.scale.model(diag(rowSums(adj)) - adj,
constr = list(A = matrix(1, 1, nrow(adj)), e = 0))
compile("fertility_tmb.cpp")               # Compile the C++ file
dyn.load(dynlib("fertility_tmb"))
f <-  MakeADFun(data=list(dat_m = dat_m, log_offset = log_offset, Q = Q),
parameters=list(alpha = 0,
# alpha_a = rep(0,7),
# beta_a = rep(0, 7),
rw_time = rep(0,22),
rw_age = rep(0,7),
# rw_interaction = matrix(0, 22, 7),
log_prec_epsilon = 1,
log_prec_rw_time = 1,
log_prec_rw_age = 1,
logit_U_str = rep(0,33),
U_iid = rep(0,33),
log_U_sigma = log(2.5), # Variance
logit_U_rho = 0 # Share of variance between structured and unstructured components
# log_prec_rw_interaction = 1
),
# ADreport = TRUE,
random = c("log_U_sigma", "logit_U_rho"),
# map = list(),
DLL = "fertility_tmb",
hessian = TRUE)
f <-  MakeADFun(data=list(dat_m = dat_m, log_offset = log_offset, Q = Q),
parameters=list(alpha = 0,
# alpha_a = rep(0,7),
# beta_a = rep(0, 7),
rw_time = rep(0,22),
rw_age = rep(0,7),
# rw_interaction = matrix(0, 22, 7),
log_prec_epsilon = 1,
log_prec_rw_time = 1,
log_prec_rw_age = 1,
logit_U_str = rep(0,33),
U_iid = rep(0,33),
log_U_sigma = log(2.5), # Variance
logit_U_rho = 0 # Share of variance between structured and unstructured components
# log_prec_rw_interaction = 1
),
# ADreport = TRUE,
random = c("log_U_sigma", "logit_U_rho"),
# map = list(),
DLL = "fertility_tmb",
hessian = TRUE,
checkParameterOrder=FALSE)
Rcpp::sourceCpp('fertility_tmb.cpp')
Rcpp::sourceCpp('fertility_tmb.cpp')
