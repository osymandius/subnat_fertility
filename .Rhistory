mutate(id = 1:nrow(.)) %>%
left_join(asfr_pred_country_subnat[ind.effect , c("country", "area_id", "agegr", "period", "id")], by="id") %>%
select(-id) %>%
left_join(ident) %>%
filter(period >1999)
samples_ident$median <- apply(samples_ident[, 1:10], 1, median)
samples_ident %<>%
select(iso3, area_id, period, agegr, median)
return(samples_ident)
}
zwe_res_nat <- get_mod_results_test(national_mod, asfr, pop_areas, areas_long, population_age_female)
zwe_res_nat <- get_mod_results_test(national_mod, asfr)
library(magrittr)
zwe_res_nat <- get_mod_results_test(national_mod, asfr)
View(zwe_res_nat)
int <- mf_out %>%
cbind(data.frame(no_interaction = f$report()$omega_out)) %>%
left_join(areas_long) %>%
select(area_id,area_level,period,age_group, no_interaction) %>%
mutate(period = as.numeric(as.character(period)))%>%
left_join(zwe_res_nat %>%
rename(inla = median,age_group = agegr) %>%
select(area_id,period, area_level,age_group,inla)) %>%
filter(area_level == 1) %>%
pivot_longer(-c(area_id,period,area_level,age_group))
int <- mf_out %>%
cbind(data.frame(no_interaction = f$report()$omega_out)) %>%
left_join(areas_long) %>%
select(area_id,area_level,period,age_group, no_interaction) %>%
mutate(period = as.numeric(as.character(period)))%>%
left_join(zwe_res_nat %>%
rename(inla = median,age_group = agegr) %>%
select(area_id,period,age_group,inla)) %>%
filter(area_level == 1) %>%
pivot_longer(-c(area_id,period,area_level,age_group))
int %>%
filter(age_group == "20-24") %>%
ggplot(aes(x=period, y=value)) +
geom_line(aes(color=name, group=name)) +
# geom_point(data= asfr_admin1 %>% filter(agegr == "20-24"), aes(x=period, y=asfr)) +
facet_wrap(~area_id)
zwe_res_nat %>%
rename(inla = median,age_group = agegr) %>%
select(area_id,period,age_group,inla)
int <- mf_out %>%
cbind(data.frame(no_interaction = f$report()$omega_out)) %>%
left_join(areas_long) %>%
select(area_id,area_level,period,age_group, no_interaction) %>%
mutate(period = as.numeric(as.character(period)))%>%
left_join(zwe_res_nat %>%
rename(inla = median,age_group = agegr) %>%
select(area_id,period,age_group,inla) %>%
left_join(areas_long)) %>%
filter(area_level == 1) %>%
pivot_longer(-c(area_id,period,area_level,age_group))
mf_out %>%
cbind(data.frame(no_interaction = f$report()$omega_out)) %>%
left_join(areas_long) %>%
select(area_id,area_level,period,age_group, no_interaction) %>%
mutate(period = as.numeric(as.character(period)))
zwe_res_nat %>%
rename(inla = median,age_group = agegr) %>%
select(area_id,period,age_group,inla) %>%
left_join(areas_long)
mf_out %>%
cbind(data.frame(no_interaction = f$report()$omega_out)) %>%
left_join(areas_long) %>%
select(area_id,area_level,period,age_group, no_interaction) %>%
mutate(period = as.numeric(as.character(period)))%>%
left_join(zwe_res_nat %>%
rename(inla = median,age_group = agegr) %>%
select(area_id,period,age_group,inla) %>%
left_join(areas_long)
)
int <- mf_out %>%
cbind(data.frame(no_interaction = f$report()$omega_out)) %>%
left_join(areas_long) %>%
select(area_id,area_level,period,age_group, no_interaction) %>%
mutate(period = as.numeric(as.character(period)))%>%
left_join(zwe_res_nat %>%
rename(inla = median,age_group = agegr) %>%
select(area_id,period,age_group,inla) %>%
left_join(areas_long)
) %>%
select(area_id, area_level, period, age_group, no_interaction, inla) %>%
filter(area_level == 1) %>%
pivot_longer(-c(area_id,period,area_level,age_group))
int %>%
filter(age_group == "20-24") %>%
ggplot(aes(x=period, y=value)) +
geom_line(aes(color=name, group=name)) +
# geom_point(data= asfr_admin1 %>% filter(agegr == "20-24"), aes(x=period, y=asfr)) +
facet_wrap(~area_id)
mf_out %>%
cbind(data.frame(no_interaction = f$report()$omega_out)) %>%
left_join(areas_long) %>%
select(area_id,area_level,period,age_group, no_interaction) %>%
mutate(period = as.numeric(as.character(period)))%>%
left_join(zwe_res_nat %>%
rename(inla = median,age_group = agegr) %>%
select(area_id,period,age_group,inla) %>%
left_join(areas_long)
) %>%
select(area_id, area_level, period, age_group, no_interaction, inla) %>%
filter(area_level == 1) %>%
pivot_longer(-c(area_id,period,area_level,age_group))
int <- mf_out %>%
cbind(data.frame(no_interaction = f$report()$omega_out)) %>%
left_join(areas_long) %>%
select(area_id,area_level,period,age_group, no_interaction) %>%
mutate(period = as.numeric(as.character(period)))%>%
left_join(zwe_res_nat %>%
rename(inla = median,age_group = agegr) %>%
select(area_id,period,age_group,inla) %>%
left_join(areas_long)
) %>%
select(area_id, area_level, period, age_group, no_interaction, inla) %>%
filter(area_level == 0) %>%
pivot_longer(-c(area_id,period,area_level,age_group))
int %>%
filter(age_group == "20-24") %>%
ggplot(aes(x=period, y=value)) +
geom_line(aes(color=name, group=name)) +
# geom_point(data= asfr_admin1 %>% filter(agegr == "20-24"), aes(x=period, y=asfr)) +
facet_wrap(~area_id)
zwe_inla <- national_mod
zwe_random <- lapply(zwe_inla$summary.random, function(x) select(x, ID, mean))
zwe_random$id.agegr <- zwe_random$id.agegr %>%
rename(id.agegr = ID) %>%
rename(age_rw1 = mean)
zwe_random$id.period <- zwe_random$id.period %>%
rename(id.period = ID)%>%
rename(period_rw2 = mean)
View(zwe_run)
asfr <- readRDS("~/Downloads/zwe_nat_asfr.rds") %>%
mutate(area_id = "ZWE") %>%
rename(age_group= agegr)
population <- read_csv(files[[iso3_current]][["population"]]) %>%
filter(calendar_quarter == unique(calendar_quarter)[1])
population <- population %>%
group_by(calendar_quarter, sex, age_group) %>%
summarise(population = sum(population)) %>%
mutate(area_id = "ZWE") %>%
ungroup
mf <- crossing(period = factor(1995:2015),
age_group = c("15-19", "20-24", "25-29", "30-34", "35-39", "40-44", "45-49"),
area_id = filter(areas_long, iso3 == iso3_current, naomi_level)$area_id) %>%
left_join(population %>%
mutate(year = year_labels(calendar_quarter_to_quarter_id(calendar_quarter))) %>%
filter(sex == "female") %>%
select(area_id, age_group, population)
) %>%
mutate(area_id = factor(area_id, levels = filter(areas_long, iso3 == iso3_current, naomi_level)$area_id),
age_group = factor(age_group, levels = c("15-19", "20-24", "25-29", "30-34", "35-39", "40-44", "45-49"))
) %>%
arrange(period, area_id, age_group) %>%
mutate(idx = factor(row_number()),
# id.interaction = factor(group_indices(., age_group, period, area_id))
id.interaction1 = factor(group_indices(., age_group, period)),
id.interaction2 = factor(group_indices(., period, area_id)),
id.interaction3 = factor(group_indices(., age_group, area_id))
)
mf <- crossing(period = factor(1995:2015),
age_group = c("15-19", "20-24", "25-29", "30-34", "35-39", "40-44", "45-49"),
area_id = filter(areas_long, iso3 == iso3_current, area_level == 0)$area_id) %>%
left_join(population %>%
mutate(year = year_labels(calendar_quarter_to_quarter_id(calendar_quarter))) %>%
filter(sex == "female") %>%
select(area_id, age_group, population)
) %>%
mutate(area_id = factor(area_id, levels = filter(areas_long, iso3 == iso3_current,  area_level == 0)$area_id),
age_group = factor(age_group, levels = c("15-19", "20-24", "25-29", "30-34", "35-39", "40-44", "45-49"))
) %>%
arrange(period, area_id, age_group) %>%
mutate(idx = factor(row_number()),
# id.interaction = factor(group_indices(., age_group, period, area_id))
id.interaction1 = factor(group_indices(., age_group, period)),
id.interaction2 = factor(group_indices(., period, area_id)),
id.interaction3 = factor(group_indices(., age_group, area_id))
)
View(mf)
obs <- asfr %>%
filter(!is.na(surveyid)) %>%
select(area_id, period, age_group, tips, births, pys) %>%
mutate(age_group = factor(age_group, levels(mf$age_group)),
period = factor(period)) %>%
left_join(mf, by = c("area_id", "period", "age_group")) %>%
mutate(tips_dummy = as.integer(tips > 5),
tips_f = factor(tips),
area_id = factor(area_id, levels(mf$area_id)))
X_mf <- model.matrix(~1 + age_group + period + area_id, mf)
# X_mf <- model.matrix(~1 + age_group + period + area_id, mf)
X_mf <- model.matrix(~1 + age_group + period, mf)
#' This has dimensions (number of observations) x (number of rows in model frame (i.e crossing of age x time x space))
#' Many more rows than mf because observations has things we need to adjust for bias (e.g. tips), but not required in model frame.
#' Column index (idx) has been joined onto obs dataframe from mf. So now each observation is labelled with the appropriate index in the mf
M_mf_obs <- Matrix::sparse.model.matrix(~0 + idx, obs)
Z_tips <- Matrix::sparse.model.matrix(~0 + tips_f, obs)
#' Create precision matrix for RW1
D_tips <- diff(diag(ncol(Z_tips)), differences = 1)
Q_tips <- as(t(D_tips) %*% D_tips, "dgCMatrix")
Z_age <- sparse.model.matrix(~0 + age_group, obs)
D_age <- diff(diag(ncol(Z_age)), differences = 1)
Q_age <- t(D_age) %*% D_age
diag(Q_age) <- diag(Q_age) + 1E-6
Q_age <- as(Q_age, "dgCMatrix")
Z_period <- sparse.model.matrix(~0 + period, obs)
D_period <- diff(diag(ncol(Z_period)), differences = 2)
Q_period <- t(D_period) %*% D_period
diag(Q_period) <- diag(Q_period) + 1E-6
Q_period <- as(Q_period, "dgCMatrix")
X_tips_dummy <- model.matrix(~0 + tips_dummy, obs)
compile("tmb/fertility_tmb_dev.cpp")               # Compile the C++ file
dyn.load(dynlib("tmb/fertility_tmb_dev"))
data <- list(X_mf = X_mf,
M_all_observations = M_mf_obs,
X_tips_dummy = X_tips_dummy,
Z_tips = Z_tips,
Z_age = Z_age,
Z_period = Z_period,
# Z_spatial = Z_spatial,
# Z_interaction = sparse.model.matrix(~0 + id.interaction, obs),
# Z_interaction1 = sparse.model.matrix(~0 + id.interaction1, obs),
# Z_interaction2 = sparse.model.matrix(~0 + id.interaction2, obs),
# Z_interaction3 = sparse.model.matrix(~0 + id.interaction3, obs),
# interaction_idx = interaction_idx,
Q_tips = Q_tips,
Q_age = Q_age,
Q_period = Q_period,
# Q_spatial = Q_spatial,
log_offset = log(obs$pys),
births_obs = obs$births
# pop = mf$population,
# A_out = A_out
)
par <- list(beta_mf = rep(0, ncol(X_mf)),
beta_tips_dummy = rep(0, ncol(X_tips_dummy)),
u_tips = rep(0, ncol(Z_tips)),
u_age = rep(0, ncol(Z_age)),
u_period = rep(0, ncol(Z_period)),
# u_spatial_str = rep(0, ncol(Z_spatial)),
# u_spatial_iid = rep(0, ncol(Z_spatial)),
# eta = array(0, c(ncol(Z_spatial), ncol(Z_age), ncol(Z_period))),
# eta1 = array(0, c(ncol(Z_age), ncol(Z_period))),
# eta2 = array(0, c(ncol(Z_spatial), ncol(Z_period))),
# eta3 = array(0, c(ncol(Z_spatial), ncol(Z_age))),
log_sigma_rw_tips = log(2.5),
log_sigma_rw_age = log(2.5),
log_sigma_rw_period = log(2.5)
# log_sigma_spatial = log(2.5),
# logit_spatial_rho = 0
)
f <-  MakeADFun(data = data,
parameters = par,
DLL = "fertility_tmb_dev",
# random = c("beta_mf", "beta_tips_dummy", "u_tips", "u_age", "u_period", "u_spatial_str", "u_spatial_iid", "eta1", "eta2", "eta3"),
random = c("beta_mf", "beta_tips_dummy", "u_tips", "u_age", "u_period"),
hessian = FALSE,
checkParameterOrder=FALSE)
fit <- nlminb(f$par, f$fn, f$gr)
int <- mf_out %>%
cbind(data.frame(nat = f$report()$omega)) %>%
left_join(areas_long) %>%
select(area_id,area_level,period,age_group, nat) %>%
mutate(period = as.numeric(as.character(period)))%>%
left_join(zwe_res %>%
rename(inla = median,age_group = agegr) %>%
select(area_id,period,age_group,inla) %>%
left_join(areas_long)
) %>%
select(area_id, area_level, period, age_group, nat, inla) %>%
filter(area_level == 0) %>%
pivot_longer(-c(area_id,period,area_level,age_group))
int <- mf_out %>%
cbind(data.frame(nat = f$report()$omega)) %>%
left_join(areas_long) %>%
select(area_id,area_level,period,age_group, nat) %>%
mutate(period = as.numeric(as.character(period)))%>%
left_join(zwe_res_nat %>%
rename(inla = median,age_group = agegr) %>%
select(area_id,period,age_group,inla) %>%
left_join(areas_long)
) %>%
select(area_id, area_level, period, age_group, nat, inla) %>%
filter(area_level == 0) %>%
pivot_longer(-c(area_id,period,area_level,age_group))
int %>%
filter(age_group == "20-24") %>%
ggplot(aes(x=period, y=value)) +
geom_line(aes(color=name, group=name)) +
# geom_point(data= asfr_admin1 %>% filter(agegr == "20-24"), aes(x=period, y=asfr)) +
facet_wrap(~area_id)
compile("tmb/fertility_tmb_dev.cpp")               # Compile the C++ file
dyn.load(dynlib("tmb/fertility_tmb_dev"))
Z_spatial <- sparse.model.matrix(~0 + area_id, obs)
sh <- areas_long %>%
filter(iso3 == iso3_current, naomi_level) %>%
mutate(area_idx = row_number())
#' Neighbor list
nb <- sh %>%
left_join(boundaries) %>%
st_as_sf %>%
as("Spatial") %>%
spdep::poly2nb() %>%
`names<-`(sh$area_idx)
adj <- nb2mat(nb, zero.policy=TRUE, style="B")
Q_spatial <- INLA::inla.scale.model(diag(rowSums(adj)) - 0.99*adj,
constr = list(A = matrix(1, 1, nrow(adj)), e = 0))
## Outputs
area_merged <-  st_read(files[[iso3_current]][["areas"]])
areas <- create_areas(area_merged = area_merged)
area_aggregation <- create_area_aggregation(area_merged$area_id[area_merged$naomi_level], areas)
age_groups <- unique(mf$age_group)
# age_group_out <- c(unique(as.character(mf$age_group)), "15-49")
#
# age_group_join <- get_age_groups() %>%
#   dplyr::filter(age_group %in% age_group_out) %>%
#   stats::setNames(paste0(names(.), "_out")) %>%
#   tidyr::crossing(get_age_groups() %>%
#                     dplyr::filter(age_group %in% age_groups)) %>%
#   dplyr::filter(age_group_start_out <= age_group_start,
#                 age_group_span_out == Inf |
#                   (age_group_start + age_group_span) <=
#                   (age_group_start_out + age_group_span_out)) %>%
#   dplyr::select(age_group_out, age_group)
mf_out <- crossing(
area_id = area_aggregation$area_id,
# age_group = age_group_join$age_group_out,
age_group = age_groups,
period = unique(mf$period)
) %>%
# mutate(indicator = ifelse(age_group == "15-49", "tfr", "asfr")) %>%
arrange(area_id, age_group, period) %>%
mutate(out_idx = row_number())
join_out <- crossing(area_aggregation,
age_group = age_groups,
period = unique(mf$period)) %>%
full_join(mf %>%
select(area_id, age_group, period, idx), by = c("model_area_id" = "area_id",
"age_group",
"period")
) %>%
full_join(mf_out) %>%
# full_join(mf_out, by=c("area_id" = "area_id",
#                        "period",
#                        "age_group_out" = "age_group")
#           ) %>%
mutate(x=1)
A_out <- spMatrix(nrow(mf_out), nrow(mf), join_out$out_idx, as.integer(join_out$idx), join_out$x)
asfr <- readRDS("asfr_pred_subnat_15_2020_NEW.rds")[[iso3_current]] %>%
rename(age_group = agegr)
population <- read_csv(files[[iso3_current]][["population"]]) %>%
filter(calendar_quarter == unique(calendar_quarter)[1])
mf <- crossing(period = factor(1995:2015),
age_group = c("15-19", "20-24", "25-29", "30-34", "35-39", "40-44", "45-49"),
area_id = filter(areas_long, iso3 == iso3_current, area_level == 2)$area_id) %>%
left_join(population %>%
mutate(year = year_labels(calendar_quarter_to_quarter_id(calendar_quarter))) %>%
filter(sex == "female") %>%
select(area_id, age_group, population)
) %>%
mutate(area_id = factor(area_id, levels = filter(areas_long, iso3 == iso3_current,  area_level == 2)$area_id),
age_group = factor(age_group, levels = c("15-19", "20-24", "25-29", "30-34", "35-39", "40-44", "45-49"))
) %>%
arrange(period, area_id, age_group) %>%
mutate(idx = factor(row_number()),
# id.interaction = factor(group_indices(., age_group, period, area_id))
id.interaction1 = factor(group_indices(., age_group, period)),
id.interaction2 = factor(group_indices(., period, area_id)),
id.interaction3 = factor(group_indices(., age_group, area_id))
)
obs <- asfr %>%
filter(!is.na(surveyid)) %>%
select(area_id, period, age_group, tips, births, pys) %>%
mutate(age_group = factor(age_group, levels(mf$age_group)),
period = factor(period)) %>%
left_join(mf, by = c("area_id", "period", "age_group")) %>%
mutate(tips_dummy = as.integer(tips > 5),
tips_f = factor(tips),
area_id = factor(area_id, levels(mf$area_id)))
# X_mf <- model.matrix(~1 + age_group + period + area_id, mf)
X_mf <- model.matrix(~1 + age_group + period, mf)
X_mf <- model.matrix(~1 + age_group + period + area_id, mf)
#' This has dimensions (number of observations) x (number of rows in model frame (i.e crossing of age x time x space))
#' Many more rows than mf because observations has things we need to adjust for bias (e.g. tips), but not required in model frame.
#' Column index (idx) has been joined onto obs dataframe from mf. So now each observation is labelled with the appropriate index in the mf
M_mf_obs <- Matrix::sparse.model.matrix(~0 + idx, obs)
Z_tips <- Matrix::sparse.model.matrix(~0 + tips_f, obs)
#' Create precision matrix for RW1
D_tips <- diff(diag(ncol(Z_tips)), differences = 1)
Q_tips <- as(t(D_tips) %*% D_tips, "dgCMatrix")
Z_age <- sparse.model.matrix(~0 + age_group, obs)
D_age <- diff(diag(ncol(Z_age)), differences = 1)
Q_age <- t(D_age) %*% D_age
diag(Q_age) <- diag(Q_age) + 1E-6
Q_age <- as(Q_age, "dgCMatrix")
Z_period <- sparse.model.matrix(~0 + period, obs)
D_period <- diff(diag(ncol(Z_period)), differences = 2)
Q_period <- t(D_period) %*% D_period
diag(Q_period) <- diag(Q_period) + 1E-6
Q_period <- as(Q_period, "dgCMatrix")
X_tips_dummy <- model.matrix(~0 + tips_dummy, obs)
Z_spatial <- sparse.model.matrix(~0 + area_id, obs)
sh <- areas_long %>%
filter(iso3 == iso3_current, naomi_level) %>%
mutate(area_idx = row_number())
#' Neighbor list
nb <- sh %>%
left_join(boundaries) %>%
st_as_sf %>%
as("Spatial") %>%
spdep::poly2nb() %>%
`names<-`(sh$area_idx)
adj <- nb2mat(nb, zero.policy=TRUE, style="B")
Q_spatial <- INLA::inla.scale.model(diag(rowSums(adj)) - 0.99*adj,
constr = list(A = matrix(1, 1, nrow(adj)), e = 0))
## Outputs
area_merged <-  st_read(files[[iso3_current]][["areas"]])
areas <- create_areas(area_merged = area_merged)
area_aggregation <- create_area_aggregation(area_merged$area_id[area_merged$naomi_level], areas)
age_groups <- unique(mf$age_group)
mf_out <- crossing(
area_id = area_aggregation$area_id,
# age_group = age_group_join$age_group_out,
age_group = age_groups,
period = unique(mf$period)
) %>%
# mutate(indicator = ifelse(age_group == "15-49", "tfr", "asfr")) %>%
arrange(area_id, age_group, period) %>%
mutate(out_idx = row_number())
join_out <- crossing(area_aggregation,
age_group = age_groups,
period = unique(mf$period)) %>%
full_join(mf %>%
select(area_id, age_group, period, idx), by = c("model_area_id" = "area_id",
"age_group",
"period")
) %>%
full_join(mf_out) %>%
# full_join(mf_out, by=c("area_id" = "area_id",
#                        "period",
#                        "age_group_out" = "age_group")
#           ) %>%
mutate(x=1)
A_out <- spMatrix(nrow(mf_out), nrow(mf), join_out$out_idx, as.integer(join_out$idx), join_out$x)
compile("tmb/fertility_tmb_dev.cpp")               # Compile the C++ file
dyn.load(dynlib("tmb/fertility_tmb_dev"))
data <- list(X_mf = X_mf,
M_all_observations = M_mf_obs,
X_tips_dummy = X_tips_dummy,
Z_tips = Z_tips,
Z_age = Z_age,
Z_period = Z_period,
Z_spatial = Z_spatial,
# Z_interaction = sparse.model.matrix(~0 + id.interaction, obs),
# Z_interaction1 = sparse.model.matrix(~0 + id.interaction1, obs),
# Z_interaction2 = sparse.model.matrix(~0 + id.interaction2, obs),
# Z_interaction3 = sparse.model.matrix(~0 + id.interaction3, obs),
# interaction_idx = interaction_idx,
Q_tips = Q_tips,
Q_age = Q_age,
Q_period = Q_period,
Q_spatial = Q_spatial,
log_offset = log(obs$pys),
births_obs = obs$births,
pop = mf$population,
A_out = A_out
)
par <- list(beta_mf = rep(0, ncol(X_mf)),
beta_tips_dummy = rep(0, ncol(X_tips_dummy)),
u_tips = rep(0, ncol(Z_tips)),
u_age = rep(0, ncol(Z_age)),
u_period = rep(0, ncol(Z_period)),
u_spatial_str = rep(0, ncol(Z_spatial)),
u_spatial_iid = rep(0, ncol(Z_spatial)),
# eta = array(0, c(ncol(Z_spatial), ncol(Z_age), ncol(Z_period))),
# eta1 = array(0, c(ncol(Z_age), ncol(Z_period))),
# eta2 = array(0, c(ncol(Z_spatial), ncol(Z_period))),
# eta3 = array(0, c(ncol(Z_spatial), ncol(Z_age))),
log_sigma_rw_tips = log(2.5),
log_sigma_rw_age = log(2.5),
log_sigma_rw_period = log(2.5),
log_sigma_spatial = log(2.5),
logit_spatial_rho = 0
)
f <-  MakeADFun(data = data,
parameters = par,
DLL = "fertility_tmb_dev",
# random = c("beta_mf", "beta_tips_dummy", "u_tips", "u_age", "u_period", "u_spatial_str", "u_spatial_iid", "eta1", "eta2", "eta3"),
random = c("beta_mf", "beta_tips_dummy", "u_tips", "u_age", "u_period", "u_spatial_str", "u_spatial_iid"),
hessian = FALSE,
checkParameterOrder=FALSE)
fit <- nlminb(f$par, f$fn, f$gr)
int <- mf_out %>%
cbind(data.frame(nat = f$report()$omega)) %>%
left_join(areas_long) %>%
select(area_id,area_level,period,age_group, nat) %>%
mutate(period = as.numeric(as.character(period)))%>%
left_join(zwe_res_nat %>%
rename(inla = median,age_group = agegr) %>%
select(area_id,period,age_group,inla) %>%
left_join(areas_long)
) %>%
select(area_id, area_level, period, age_group, nat, inla) %>%
filter(area_level == 0) %>%
pivot_longer(-c(area_id,period,area_level,age_group))
int %>%
filter(age_group == "20-24") %>%
ggplot(aes(x=period, y=value)) +
geom_line(aes(color=name, group=name)) +
# geom_point(data= asfr_admin1 %>% filter(agegr == "20-24"), aes(x=period, y=asfr)) +
facet_wrap(~area_id)
