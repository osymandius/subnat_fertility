mutate(country = iso2_code)
fixed_eff
}
fixed_eff <- Map(fixed_eff_fun, iso2_list, iso3_list, list("DHS"))
fixed_eff_fun(iso2_list[[1]], iso3_list[[1]], "DHS")
fixed_eff_fun(iso2_list[[2]], iso3_list[[2]], "DHS")
fixed_eff_fun(iso2_list[[3]], iso3_list[[3]], "DHS")
debugonce(fixed_eff_fun)
fixed_eff_fun(iso2_list[[3]], iso3_list[[3]], "DHS")
surveys <- dhs_surveys(countryIds = "ET", surveyYearStart=1995) %>%
filter(SurveyType == survey_type)
surveys <- dhs_surveys(countryIds = "ET", surveyYearStart=1995) %>%
filter(SurveyType == "DHS")
iso2_list <- iso2_list[-3]
iso3_list <- iso3_list[-3]
fixed_eff <- Map(fixed_eff_fun, iso2_list, iso3_list, list("DHS"))
View(fixed_eff)
fixed_eff %>%
filter(mean>0.2) %>%
mutate(tips = rep(1:6, times=length(unique(quarter_summary$country)))) %>%
bind_rows(data.frame("mean" = 1, "tips" = 0, "country"=unique(quarter_summary$country))) %>%
mutate(tips = factor(tips)) %>%
ggplot(aes(x=tips)) +
geom_point(aes(y=mean)) +
geom_errorbar(aes(ymin = `0.025quant`, ymax=`0.975quant`), width=0.2) +
geom_hline(aes(yintercept=1), linetype=3)+
facet_wrap(~country)
fixed_eff %>%
bind_rows %>%
filter(mean>0.2) %>%
mutate(tips = rep(1:6, times=length(unique(quarter_summary$country)))) %>%
bind_rows(data.frame("mean" = 1, "tips" = 0, "country"=unique(quarter_summary$country))) %>%
mutate(tips = factor(tips)) %>%
ggplot(aes(x=tips)) +
geom_point(aes(y=mean)) +
geom_errorbar(aes(ymin = `0.025quant`, ymax=`0.975quant`), width=0.2) +
geom_hline(aes(yintercept=1), linetype=3)+
facet_wrap(~country)
fixed_eff %>%
bind_rows
fixed_eff %>%
bind_rows %>%
filter(mean>0.2)
length(iso2_list)
iso2_list
unlist(iso2_list)
fixed_eff %>%
fixed_eff %>%
bind_rows %>%
filter(mean>0.2) %>%
mutate(tips = rep(1:6, times=length(iso2_list))) %>%
bind_rows(data.frame("mean" = 1, "tips" = 0, "country"=unlist(iso2_list))) %>%
mutate(tips = factor(tips)) %>%
ggplot(aes(x=tips)) +
geom_point(aes(y=mean)) +
geom_errorbar(aes(ymin = `0.025quant`, ymax=`0.975quant`), width=0.2) +
geom_hline(aes(yintercept=1), linetype=3)+
facet_wrap(~country)
fixed_eff %>%
bind_rows %>%
filter(mean>0.2) %>%
mutate(tips = rep(1:6, times=length(iso2_list))) %>%
bind_rows(data.frame("mean" = 1, "tips" = 0, "country"=unlist(iso2_list))) %>%
mutate(tips = factor(tips)) %>%
ggplot(aes(x=tips)) +
geom_point(aes(y=mean)) +
geom_errorbar(aes(ymin = `0.025quant`, ymax=`0.975quant`), width=0.2) +
geom_hline(aes(yintercept=1), linetype=3)+
facet_wrap(~country)
dhs_countries()
dhs_countries(RegionName = "Sub-Saharan Africa")
dhs_surveys()
?dhs_countries
dhs_countries(returnFields = c("CountryName", "DHS_CountryCode"))
iso2 <- c("MW", "RW", "UG", "MZ", "NM", "KE", "ZM", "ZW", "TZ")
iso2_list <- lapply(iso2, print)
iso3_list <- lapply(iso2_list, countrycode("iso2c", "iso3c"))
iso3_list <- lapply(iso2_list, countrycode(.,"iso2c", "iso3c"))
iso3_list <- lapply(iso2_list, function(x) {x %>% countrycode("iso2c", "iso3c")})
View(iso3_list)
iso3_list[[NA]] <- "NAM"
is.na(iso3_list)
is.na(iso3_list) <- "NAM"
iso3_list
iso3_list <- lapply(iso2_list, function(x) {x %>% countrycode("iso2c", "iso3c")})
iso3_list[5] <- "NAM"
iso3_list
fixed_eff <- Map(fixed_eff_fun, iso2_list, iso3_list, list("DHS"))
fixed_eff %>%
bind_rows %>%
filter(mean>0.2) %>%
mutate(tips = rep(1:6, times=length(iso2_list))) %>%
bind_rows(data.frame("mean" = 1, "tips" = 0, "country"=unlist(iso2_list))) %>%
mutate(tips = factor(tips)) %>%
ggplot(aes(x=tips)) +
geom_point(aes(y=mean)) +
geom_errorbar(aes(ymin = `0.025quant`, ymax=`0.975quant`), width=0.2) +
geom_hline(aes(yintercept=1), linetype=3)+
facet_wrap(~country)
tips_surv <- list("DHS" = c(0:10), "MIS" = c(0:5), "AIS" = c(0:5))[surveys$SurveyType]
fixed_eff_fun <- function(iso2_code, iso3_code, survey_type) {
surveys <- dhs_surveys(countryIds = c(iso2_code), surveyYearStart=1995) %>%
filter(SurveyType == survey_type)
# foo <- surveys %>%
#   separate(SurveyId, into=c("cc", "year", "type"), sep = c(2,6)) %>%
#   type.convert %>%
#   dplyr::select(year)
ird <- dhs_datasets(fileType = "IR", fileFormat = "flat", surveyIds = surveys$SurveyId)
ird$path <- unlist(get_datasets(ird))
#
#
ir <- lapply(ird$path, readRDS) %>%
Map(data.frame,
surveyid = surveys$SurveyId,
country = surveys$CountryName,
survyear = surveys$SurveyYear,
survtype = surveys$SurveyType,
.,
stringsAsFactors = FALSE)
tips_surv <- list("DHS" = c(0:10), "MIS" = c(0:5), "AIS" = c(0:5))[surveys$SurveyType]
asfr <- Map(calc_asfr1, ir,
by = list(~surveyid + survyear),
tips = tips_surv,
agegr= list(3:10*5),
#period = list(seq(1995, 2017, by=0.5)),
period = list((1995*1):(2017*1)*(1/1)),
counts = TRUE)
asfr1 <- asfr %>%
bind_rows %>%
separate(period, into=c("period", "stuff"), sep="-") %>%
dplyr::select(-stuff) %>%
type.convert %>%
mutate(id.period = group_indices(., period),
id.period2 = id.period,
id.agegr = group_indices(., agegr),
id.agegr2 = id.agegr,
agegr2 = agegr,
id.agegr.period = group_indices(., period, agegr),
id.tips = group_indices(., tips),
# id.district = group_indices(., area_name),
# id.district2 = id.district,
# id.district3 = id.district,
# id.survey = group_indices(., surveyid),
# id.agegr.period.district = group_indices(., agegr, period, district),
# id.region = group_indices(., region_name),
id = 1:nrow(.),
split_period = as.character(period)) %>%
separate(split_period, into=c("quot", "remainder"), sep=5, remove=TRUE) %>%
mutate(id.quarter = ifelse(remainder==25, 2,
ifelse(remainder==5, 3,
ifelse(remainder==75, 4, 1
)
)),
id.quarter = factor(id.quarter),
id.tips = factor(id.tips)
) %>%
dplyr::select(-c(quot, remainder))
# asfr_pred <- crossing(surveyid = asfr1$surveyid, period = asfr1$period, agegr = asfr1$agegr,  pys=1) %>%
#   bind_rows(asfr1) %>%
#   mutate(id.period = group_indices(., period),
#          id.period2 = id.period,
#          id.agegr = group_indices(., agegr),
#          id.agegr2 = id.agegr,
#          agegr2 = agegr,
#          id.agegr.period = group_indices(., period, agegr),
#          id.tips = group_indices(., tips),
#          # id.district = group_indices(., area_name),
#          # id.district2 = id.district,
#          # id.district3 = id.district,
#          # id.survey = group_indices(., surveyid),
#          # id.agegr.period.district = group_indices(., agegr, period, district),
#          # id.region = group_indices(., region_name),
#          id = 1:nrow(.),
#          split_period = as.character(period)) %>%
#   separate(split_period, into=c("quot", "remainder"), sep=5, remove=TRUE) %>%
#   mutate(id.quarter = ifelse(remainder==25, 2,
#                              ifelse(remainder==5, 3,
#                                     ifelse(remainder==75, 4, 1
#
#                                     )
#                              )),
#          id.quarter = factor(id.quarter)
#   ) %>%
#   dplyr::select(-c(quot, remainder))
formulae <- list()
formulae[[8]] <- births ~ id.quarter + f(id.agegr, model="rw1") + f(id.period, model="rw2") + f(id.agegr2, model="rw1", group=id.period, control.group=list(model="rw2"))
formulae[[9]] <- births ~ id.tips + f(id.agegr, model="rw1") + f(id.period, model="rw2") + f(id.agegr2, model="rw1", group=id.period, control.group=list(model="rw2"))
mod1 <- inla(formulae[[9]], family="poisson", data=asfr1, E=pys,
control.family=list(link='log'),
control.predictor=list(compute=TRUE, link=1),
control.inla = list(strategy = "gaussian", int.strategy = "eb"),
control.compute=list(config = TRUE, dic= TRUE, cpo=TRUE),
verbose=TRUE)
# pred_size <- nrow(asfr_pred) - nrow(asfr1)
#
# pred <- asfr_pred %>%
#   filter(id<pred_size+1) %>%
#   dplyr::select("agegr", "period", "pys","id") %>%
#   left_join(mod1$summary.fitted.values[1:pred_size, ] %>%
#               mutate(id = 1:pred_size), by="id") %>%
#   arrange(period, agegr) %>%
#   #filter(agegr <20) %>%
#   mutate(agegr = factor(agegr))
# # mutate(agegroup = rep(1:7, each=5, times=pred_size/35),
# #        agegroup = factor(agegroup, levels=1:7, labels=c("15-19", "20-24", "25-29", "30-34", "35-39", "40-44", "45-49")))
# ggplot()+
#   geom_line(data = pred, aes(x=period, y=`0.5quant`, group=agegr, color=agegr)) +
#   geom_vline(aes(xintercept=1995:2016), linetype=3) +
#   geom_rect(data=foo, aes(xmin = year-1, xmax = year, ymin = -Inf, ymax=Inf), fill="blue", alpha=0.2) +
#   labs(y="ASFR", x=element_blank(), title=paste(iso3_code, "0.25 year periods, without iid"))
fixed_eff <- exp(mod1$summary.fixed) %>%
mutate(country = iso2_code)
fixed_eff
}
fixed_eff <- Map(fixed_eff_fun, iso2_list, iso3_list, list("DHS"))
fixed_eff %>%
bind_rows %>%
filter(mean>0.2) %>%
mutate(tips = rep(1:9, times=length(iso2_list))) %>%
bind_rows(data.frame("mean" = 1, "tips" = 0, "country"=unlist(iso2_list))) %>%
mutate(tips = factor(tips)) %>%
ggplot(aes(x=tips)) +
geom_point(aes(y=mean)) +
geom_errorbar(aes(ymin = `0.025quant`, ymax=`0.975quant`), width=0.2) +
geom_hline(aes(yintercept=1), linetype=3)+
facet_wrap(~country)
inla.list.models()
calc_asfr1 <- function(data,
by = NULL,
agegr = NULL,
period = NULL,
cohort = NULL,
tips = NULL,
clusters=~v021,
strata=NULL,
id="caseid",
dob="v011",
intv = "v008",
weight= "v005",
varmethod = "none",
bvars = grep("^b3\\_[0-9]*", names(data), value=TRUE),
birth_displace = 1e-6,
origin=1900,
scale=12,
bhdata = NULL,
counts=FALSE,
clustcounts = FALSE){
data$id <- data[[id]]
data$dob <- data[[dob]]
data$intv <- data[[intv]]
data$weights <- data[[weight]] / mean(data[[weight]])
if(is.null(by))
by <- ~1
vars <- unique(unlist(lapply(c(by, strata, clusters), all.vars)))
f <- formula(paste("~", paste(vars, collapse = "+")))
mf <- model.frame(formula = f, data = data, na.action = na.pass,
id = id, weights = weights, dob = dob, intv = intv)
if(is.null(bhdata)) {
births <- reshape(model.frame(paste("~", paste(bvars, collapse="+")),
data, na.action=na.pass, id=id),
idvar="(id)", timevar="bidx",
varying=bvars, v.names="bcmc", direction="long")
} else {
if(length(bvars) > 1)
stop("If `bhdata' is provided, bvars must provide a single variable name (length(bvars) = 1)")
bhdata$id <- bhdata[[id]]
bhdata$bcmc <- bhdata[[bvars]]
births <- model.frame(~bcmc, data = bhdata, id = id)
births$bidx <- ave(births$bcmc, births$`(id)`, FUN = seq_along)
}
births <- births[!is.na(births$bcmc), ]
births$bcmc <- births$bcmc + births$bidx * birth_displace
epis <- tmerge(mf, mf, id=`(id)`, tstart=`(dob)`, tstop=`(intv)`)
epis <- tmerge(epis, births, id=`(id)`, birth = event(bcmc))
aggr <- demog_pyears(f, epis, period=period, agegr=agegr, cohort=cohort, tips=tips,
event="birth", weights="(weights)", origin=origin, scale=scale)$data
## construct interaction of all factor levels that appear
byvar <- intersect(c(all.vars(by), "agegr", "period", "cohort", "tips"),
names(aggr))
aggr$byf <- interaction(aggr[byvar], drop=TRUE)
## prediction for all factor levels that appear
pred <- data.frame(aggr[c(byvar, "byf")])[!duplicated(aggr$byf),]
pred <- pred[order(pred$byf), ]
if(counts || varmethod == "none"){
mc <- model.matrix(~-1+byf, aggr)
clong <- aggr[c("event", "pyears")]
pred[c("births", "pys")] <- t(mc) %*% as.matrix(clong)
}
if(varmethod == "none") {
pred$asfr <- pred$births / pred$pys
pred$byf <- NULL
if(!counts)
pred[c("births", "pys")] <- NULL
} else if(varmethod == "lin") {
des <- survey::svydesign(ids=clusters, strata=strata, data=aggr, weights=~1)
class(des) <- c("svypyears", class(des))
## fit model
f <- if(length(levels(aggr$byf)) == 1)
event ~ offset(log(pyears))
else
event ~ -1 + byf + offset(log(pyears))
mod <- survey::svyglm(f, des, family=quasipoisson)
## prediction for all factor levels that appear
pred$pyears <- 1
asfr <- predict(mod, pred, type="response", vcov=TRUE)
v <- vcov(asfr)
dimnames(v) <- list(pred$byf, pred$byf)
pred$asfr <- as.numeric(asfr)
pred$se_asfr <- sqrt(diag(v))
pred[c("byf", "pyears")] <- NULL
attr(pred, "var") <- v
} else if(varmethod %in% c("jkn", "jk1")) {
## Convert to array with events and PYs for each cluster
## reshape2::acast is MUCH faster than stats::reshape
events_clust <- reshape2::acast(aggr, update(clusters, byf ~ .), value.var="event")
pyears_clust <- reshape2::acast(aggr, update(clusters, byf ~ .), value.var="pyears")
if(varmethod == "jkn"){
aggr$strataid <- as.integer(interaction(aggr[all.vars(strata)], drop=TRUE))
strataid <- drop(reshape2::acast(unique(aggr[c(all.vars(clusters), "strataid")]),
update(clusters,  1 ~ .), value.var="strataid"))
} else
strataid <- NULL
estdf <- jackknife(events_clust, pyears_clust, strataid)
pred$asfr <- estdf$est
pred$se_asfr <- estdf$se
attr(pred, "var") <- vcov(estdf)
pred$byf <- NULL
if(clustcounts){
attr(pred, "events_clust") <- events_clust
attr(pred, "pyears_clust") <- pyears_clust
attr(pred, "strataid") <- strataid
}
} else
stop(paste0("varmethod = \"", varmethod, "\" is not recognized."))
rownames(pred) <- NULL
return(pred)
}
ir_to_area <- function(ir, areas2) {
ir %>%
left_join(areas2, by=c("v001" = "cluster_id")) %>%
filter(!is.na(area_id))
}
#' Choose a country
iso2_code <- "MW"
iso3_code <- "MWI"
##+ datasets
surveys <- dhs_surveys(countryIds = c(iso2_code), surveyYearStart=1995) %>%
filter(SurveyType != "AIS")
foo <- surveys %>%
separate(SurveyId, into=c("cc", "year", "type"), sep = c(2,6)) %>%
type.convert %>%
dplyr::select(year)
ird <- dhs_datasets(fileType = "IR", fileFormat = "flat", surveyIds = surveys$SurveyId)
ird$path <- unlist(get_datasets(ird))
#
#
ir <- lapply(ird$path, readRDS) %>%
Map(data.frame,
surveyid = surveys$SurveyId,
country = surveys$CountryName,
survyear = surveys$SurveyYear,
survtype = surveys$SurveyType,
.,
stringsAsFactors = FALSE)
tips_surv <- list("DHS" = c(0, 7), "MIS" = c(0, 5), "AIS" = c(0, 5))[surveys$SurveyType]
asfr <- Map(calc_asfr1, ir,
by = list(~surveyid + survyear),
tips = tips_surv,
agegr= list(3:10*5),
#period = list(seq(1995, 2017, by=0.5)),
period = list((1995*1):(2017*1)*(1/1)),
counts = TRUE)
asfr1 <- asfr %>%
bind_rows %>%
type.convert
#area_name = asfr1$area_name,
asfr_pred <- crossing(surveyid = asfr1$surveyid, period = asfr1$period, agegr = asfr1$agegr,  pys=1) %>%
bind_rows(asfr1) %>%
mutate(id.period = group_indices(., period),
id.period2 = id.period,
id.agegr = group_indices(., agegr),
id.agegr2 = id.agegr,
agegr2 = agegr,
id.agegr.period = group_indices(., period, agegr),
# id.district = group_indices(., area_name),
# id.district2 = id.district,
# id.district3 = id.district,
# id.survey = group_indices(., surveyid),
# id.agegr.period.district = group_indices(., agegr, period, district),
# id.region = group_indices(., region_name),
id = 1:nrow(.),
split_period = as.character(period)) %>%
separate(split_period, into=c("quot", "remainder"), sep=5, remove=TRUE) %>%
mutate(id.quarter = ifelse(remainder==25, 2,
ifelse(remainder==5, 3,
ifelse(remainder==75, 4, 1
)
)),
id.quarter = factor(id.quarter)
) %>%
dplyr::select(-c(quot, remainder))
formulae <- list()
formulae[[9]] <- births ~ f(id.agegr, model="rw1") + f(id.period, model="rw2") + f(id.agegr2, model="rw1", group=id.period, control.group=list(model="rw2"))
mod1 <- inla(formulae[[9]], family="nbinomial", data=asfr_pred, E=pys,
control.family=list(link='log'),
control.predictor=list(compute=TRUE, link=1),
control.inla = list(strategy = "gaussian", int.strategy = "eb"),
control.compute=list(config = TRUE, dic= TRUE, cpo=TRUE),
verbose=TRUE)
inla.list.models()
pred_size <- nrow(asfr_pred) - nrow(asfr1)
pred <- asfr_pred %>%
filter(id<pred_size+1) %>%
dplyr::select("agegr", "period", "pys","id") %>%
left_join(mod1$summary.fitted.values[1:pred_size, ] %>%
mutate(id = 1:pred_size), by="id") %>%
arrange(period, agegr) %>%
#filter(agegr <20) %>%
mutate(agegr = factor(agegr))
ggplot()+
geom_line(data = pred, aes(x=period, y=`0.5quant`, group=agegr, color=agegr)) +
geom_vline(aes(xintercept=1995:2016), linetype=3) +
geom_rect(data=foo, aes(xmin = year-1, xmax = year, ymin = -Inf, ymax=Inf), fill="blue", alpha=0.2) +
labs(y="ASFR", x=element_blank(), title="Zimbabwe, 0.25 year periods, without iid")
ggplot()+
geom_line(data = pred, aes(x=period, y=`0.5quant`, group=agegr, color=agegr)) +
geom_vline(aes(xintercept=1995:2016), linetype=3) +
geom_rect(data=foo, aes(xmin = year-1, xmax = year, ymin = -Inf, ymax=Inf), fill="blue", alpha=0.2) +
labs(y="ASFR", x=element_blank(), title="Malawi, negative binomial")
mod1 <- inla(formulae[[9]], family="poisson", data=asfr_pred, E=pys,
control.family=list(link='log'),
control.predictor=list(compute=TRUE, link=1),
control.inla = list(strategy = "gaussian", int.strategy = "eb"),
control.compute=list(config = TRUE, dic= TRUE, cpo=TRUE),
verbose=TRUE)
pred_size <- nrow(asfr_pred) - nrow(asfr1)
pred <- asfr_pred %>%
filter(id<pred_size+1) %>%
dplyr::select("agegr", "period", "pys","id") %>%
left_join(mod1$summary.fitted.values[1:pred_size, ] %>%
mutate(id = 1:pred_size), by="id") %>%
arrange(period, agegr) %>%
#filter(agegr <20) %>%
mutate(agegr = factor(agegr))
ggplot()+
geom_line(data = pred, aes(x=period, y=`0.5quant`, group=agegr, color=agegr)) +
geom_vline(aes(xintercept=1995:2016), linetype=3) +
geom_rect(data=foo, aes(xmin = year-1, xmax = year, ymin = -Inf, ymax=Inf), fill="blue", alpha=0.2) +
labs(y="ASFR", x=element_blank(), title="Malawi, negative binomial")
ggplot()+
geom_line(data = pred, aes(x=period, y=`0.5quant`, group=agegr, color=agegr)) +
geom_vline(aes(xintercept=1995:2016), linetype=3) +
geom_rect(data=foo, aes(xmin = year-1, xmax = year, ymin = -Inf, ymax=Inf), fill="blue", alpha=0.2) +
labs(y="ASFR", x=element_blank(), title="Malawi, poisson")
mod2 <- inla(formulae[[9]], family="nbinomial", data=asfr_pred, E=pys,
control.family=list(link='log'),
control.predictor=list(compute=TRUE, link=1),
control.inla = list(strategy = "gaussian", int.strategy = "eb"),
control.compute=list(config = TRUE, dic= TRUE, cpo=TRUE),
verbose=TRUE)
summary(mod1)
summary(mod2)
asfr <- Map(calc_asfr1, ir,
by = list(~surveyid + survyear),
tips = tips_surv,
agegr= list(3:10*5),
#period = list(seq(1995, 2017, by=0.5)),
period = list((1995*2):(2017*2)*(1/2)),
counts = TRUE)
asfr1 <- asfr %>%
bind_rows %>%
separate(period, into=c("period", "stuff"), sep="-") %>%
dplyr::select(-stuff) %>%
type.convert
#area_name = asfr1$area_name,
asfr_pred <- crossing(surveyid = asfr1$surveyid, period = asfr1$period, agegr = asfr1$agegr,  pys=1) %>%
bind_rows(asfr1) %>%
mutate(id.period = group_indices(., period),
id.period2 = id.period,
id.agegr = group_indices(., agegr),
id.agegr2 = id.agegr,
agegr2 = agegr,
id.agegr.period = group_indices(., period, agegr),
# id.district = group_indices(., area_name),
# id.district2 = id.district,
# id.district3 = id.district,
# id.survey = group_indices(., surveyid),
# id.agegr.period.district = group_indices(., agegr, period, district),
# id.region = group_indices(., region_name),
id = 1:nrow(.),
split_period = as.character(period)) %>%
separate(split_period, into=c("quot", "remainder"), sep=5, remove=TRUE) %>%
mutate(id.quarter = ifelse(remainder==25, 2,
ifelse(remainder==5, 3,
ifelse(remainder==75, 4, 1
)
)),
id.quarter = factor(id.quarter)
) %>%
dplyr::select(-c(quot, remainder))
mod2 <- inla(formulae[[9]], family="nbinomial", data=asfr_pred, E=pys,
control.family=list(link='log'),
control.predictor=list(compute=TRUE, link=1),
control.inla = list(strategy = "gaussian", int.strategy = "eb"),
control.compute=list(config = TRUE, dic= TRUE, cpo=TRUE),
verbose=TRUE)
mod2 <- inla(formulae[[8]], family="nbinomial", data=asfr_pred, E=pys,
control.family=list(link='log'),
control.predictor=list(compute=TRUE, link=1),
control.inla = list(strategy = "gaussian", int.strategy = "eb"),
control.compute=list(config = TRUE, dic= TRUE, cpo=TRUE),
verbose=TRUE)
