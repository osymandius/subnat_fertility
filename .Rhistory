install.packages(c("abind", "devtools", "sf", "spdep", "tidyverse", "TMB"))
install.packages("INLA", repos=c(getOption("repos"), INLA="https://inla.r-inla-download.org/R/stable"), dep=TRUE)
setwd("~/GitHub/subnat_fertility/")
source("R/inputs.R")
lapply(list.files("~/GitHub/naomi/R", full.names = TRUE), source)
list2env(make_areas_population("ZWE", "~/GitHub/naomi-data/"), globalenv())
asfr <- readRDS(paste0("countries/", iso3_current, "/data/", iso3_current, "_asfr_admin", 0, ".rds"))
library(tidyverse)
library(TMB)
library(tidyverse)
library(abind)
library(sf)
library(spdep)
library(Matrix)
list2env(make_areas_population("ZWE", "~/GitHub/naomi-data/"), globalenv())
asfr <- readRDS(paste0("countries/", iso3_current, "/data/", iso3_current, "_asfr_admin", 0, ".rds"))
iso3_current <- "ZWE"
asfr <- readRDS(paste0("countries/", iso3_current, "/data/", iso3_current, "_asfr_admin", 0, ".rds"))
population <- population %>%
filter(period == min(period))
population <- population %>%
group_by(period, sex, age_group) %>%
summarise(population = sum(population)) %>%
mutate(area_id = "ZWE") %>%
ungroup
mf <- crossing(period = factor(1995:2015),
age_group = c("15-19", "20-24", "25-29", "30-34", "35-39", "40-44", "45-49"),
area_id = filter(areas_long, iso3 == iso3_current, area_level == 0)$area_id) %>%
left_join(population %>%
filter(sex == "female") %>%
select(area_id, age_group, population)
) %>%
mutate(area_id = factor(area_id, levels = filter(areas_long, iso3 == iso3_current,  area_level == 0)$area_id),
age_group = factor(age_group, levels = c("15-19", "20-24", "25-29", "30-34", "35-39", "40-44", "45-49"))
) %>%
arrange(period, area_id, age_group) %>%
mutate(idx = factor(row_number()),
# id.interaction = factor(group_indices(., age_group, period, area_id))
id.interaction1 = factor(group_indices(., age_group, period)),
id.interaction2 = factor(group_indices(., period, area_id)),
id.interaction3 = factor(group_indices(., age_group, area_id))
)
obs <- asfr %>%
filter(!is.na(surveyid)) %>%
select(area_id, period, age_group, tips, births, pys) %>%
mutate(age_group = factor(age_group, levels(mf$age_group)),
period = factor(period)) %>%
left_join(mf, by = c("area_id", "period", "age_group")) %>%
mutate(tips_dummy = as.integer(tips > 5),
tips_f = factor(tips),
area_id = factor(area_id, levels(mf$area_id)))
# X_mf <- model.matrix(~1 + age_group + period + area_id, mf)
X_mf <- model.matrix(~1 + age_group + period, mf)
#' This has dimensions (number of observations) x (number of rows in model frame (i.e crossing of age x time x space))
#' Many more rows than mf because observations has things we need to adjust for bias (e.g. tips), but not required in model frame.
#' Column index (idx) has been joined onto obs dataframe from mf. So now each observation is labelled with the appropriate index in the mf
M_mf_obs <- Matrix::sparse.model.matrix(~0 + idx, obs)
Z_tips <- sparse.model.matrix(~0 + tips_f, obs)
#' Create precision matrix for RW1
D_tips <- diff(diag(ncol(Z_tips)), differences = 1)
Q_tips <- as(t(D_tips) %*% D_tips, "dgCMatrix")
Z_age <- sparse.model.matrix(~0 + age_group, obs)
D_age <- diff(diag(ncol(Z_age)), differences = 1)
Q_age <- t(D_age) %*% D_age
diag(Q_age) <- diag(Q_age) + 1E-6
Q_age <- as(Q_age, "dgCMatrix")
Z_period <- sparse.model.matrix(~0 + period, obs)
D_period <- diff(diag(ncol(Z_period)), differences = 2)
Q_period <- t(D_period) %*% D_period
diag(Q_period) <- diag(Q_period) + 1E-6
Q_period <- as(Q_period, "dgCMatrix")
X_tips_dummy <- model.matrix(~0 + tips_dummy, obs)
Z_spatial <- sparse.model.matrix(~0 + area_id, obs)
dyn.unload(dynlib("tmb/fertility_tmb_dev"))
compile("tmb/fertility_tmb_dev.cpp")               # Compile the C++ file
dyn.load(dynlib("tmb/fertility_tmb_dev"))
compile("tmb/fertility_tmb_dev.cpp")               # Compile the C++ file
